{"version":3,"file":"wavesurfer.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASM4hB,WAAW;EAYb;AACJ;AACA;AACA;AACA;AACA;EACI,SAAAA,YAAY9Y,MAAM,EAAE+Y,EAAE,EAAE;IAAApjB,eAAA,OAAAmjB,WAAA;EAAC;EACzB;AACJ;AACA;AACA;AACA;AACA;EALIliB,YAAA,CAAAkiB,WAAA;IAAAniB,GAAA;IAAA2B,KAAA;IAlBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,SAAAwF,OAAOkC,MAAM,EAAE,CAAC;EAAC;IAAArJ,GAAA;IAAA2B,KAAA,EAcjB,SAAA4N,KAAA,EAAO,CAAC;IACR;AACJ;AACA;AACA;AACA;AACA;EALI;IAAAvP,GAAA;IAAA2B,KAAA,EAMA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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement-webaudio.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/absMax.js","webpack://WaveSurfer/./src/util/clamp.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/orientation.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/silence-mode.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, () => {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     *\n     * @param {string} waveColor Fill color for the wave canvas\n     * @param {?string} progressColor Fill color for the progress canvas\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = waveColor;\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = progressColor;\n        }\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i = first;\n\n                for (i; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    /* in case of silences, allow the user to specify that we\n                     * always draw *something* (normally a 1px high bar) */\n                    if (h == 0 && this.params.barMinHeight) {\n                        h = this.params.barMinHeight;\n                    }\n\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    this.drawer.fireEvent('redraw');\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `'image/png'`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `'image/jpeg'`` and `'image/webp'`.\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\n     * or 'blob'.\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** scriptBufferSize: size of the processing buffer */\n    static scriptBufferSize = 256;\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            let audio = new window.Audio();\n            if (!audio.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            audio.autoplay = true;\n            const dest = this.ac.createMediaStreamDestination();\n            this.gainNode.disconnect();\n            this.gainNode.connect(dest);\n            audio.srcObject = dest.stream;\n\n            return audio.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n",""],"names":["_style","_interopRequireDefault","require","_getId","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","getId","name","toLowerCase","canvasContextAttributes","value","initWave","element","getContext","initProgress","updateDimensions","elementWidth","totalWidth","width","height","offsetLeft","elementSize","style","hasProgressCanvas","clearWave","clearRect","canvas","setFillStyles","waveColor","progressColor","fillStyle","applyCanvasTransforms","vertical","setTransform","fillRects","x","y","radius","fillRectToContext","ctx","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","drawLines","peaks","absmax","halfH","offsetY","drawLineToContext","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","peak","h","halfPixel","j","destroy","getImage","format","quality","type","_this","Promise","resolve","toBlob","toDataURL","exports","module","util","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","set","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","Drawer","_util$Observer","_super","container","params","withOrientation","pixelRatio","lastPos","wrapper","el","styles","createWrapper","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","handleEvent","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","_this2","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","drawPeaks","setWidth","barWidth","drawBars","drawWave","resetScroll","recenter","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","offset","rate","autoCenterRate","max","min","getScrollX","newWidth","updateSize","setHeight","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","updateCursor","channelIndex","Observer","_drawer","_drawer2","MultiCanvas","_Drawer","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","init","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","leftOffset","push","lastEntry","parentElement","pop","_this3","frame","_this4","prepareDraw","_ref","hasMinVals","ch","peakIndexScale","bar","gap","barGap","step","floor","barMinHeight","_this5","_ref2","reflectedPeaks","len","drawLine","_this6","_ref3","splitChannelsOptions","channelColors","startCanvas","endCanvas","intersection","x1","y1","x2","y2","_ref4","hideChannel","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","_this7","Array","channels","filteredChannels","filter","c","overlay","overallAbsMax","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","some","val","all","images","_mediaelement","_get","property","receiver","base","_superPropBase","object","MediaElementWebAudio","_MediaElement","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","_load","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","play","resumeAudioContext","destroyWebAudio","MediaElement","_webaudio","_WebAudio","currentTime","duration","paused","playbackRate","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","_setupMediaListeners","error","canplay","ended","seeked","event","volumechange","muted","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","load","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","loadElt","elt","HTMLMediaElement","Error","setVolume","getDuration","explicitDuration","Infinity","seekable","getPlayedPercents","getPlaybackRate","seekTo","clearPlayEnd","promise","setPlayEnd","_onPlayEnd","time","un","getPeaks","setSinkId","deviceId","reject","getVolume","setMute","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","addRangeToPeakCache","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","getCacheRanges","peakCacheRangePairs","_max","_min","values","utilMax","utilmin","_observer","ProgressHandler","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","header","append","responseType","fetchOptions","method","headers","mode","credentials","redirect","referrer","signal","fetch","progressAvailable","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","_requestAnimationFrame","func","_len","args","_key","reqAnimationFrame","prefix","random","toString","substring","_absMax","_frame","_debounce","_preventClick","_fetch","_clamp","_orientation","_silenceMode","largest","smallest","_disabledEventEmissions","handlers","callback","splice","once","handler","setTimeout","setDisabledEventEmissions","eventNames","_isDisabledEventEmission","_len2","_key2","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","isProxy","preventClickHandler","stopPropagation","preventClick","_default","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ignoreSilenceMode","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","_peakcache","_mediaelementWebaudio","PluginClass","ws","WaveSurfer","defaultParams","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","xhr","backends","assign","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","getActivePlugins","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","destroyAllPlugins","drawBuffer","newVolume","setCurrentTime","seconds","playPause","isPlaying","skipBackward","skip","skipForward","seekAndCenter","_this8","isFinite","isWebAudioBackend","oldScrollParent","stop","toggleMute","mute","getMute","getFilters","filters","toggleScroll","toggleInteraction","getWaveColor","setWaveColor","color","getProgressColor","setProgressColor","getBackgroundColor","background","getCursorColor","setCursorColor","getHeight","setFilteredChannels","channelIndices","newRanges","zoom","pxPerSec","loadArrayBuffer","_this9","decodeArrayBuffer","data","loadDecodedBuffer","loadBlob","_this10","reader","FileReader","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","_this11","action","getArrayBuffer","setPeaks","urlOrElt","_this12","err","_this13","_this14","request","percentComplete","exportPCM","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","exportImage","cancelAjax","cancel","abort","clearTmpEvents","disconnectSource","wavesurfer","VERSION","__VERSION__","_defineProperty","PLAYING","PAUSED","FINISHED","_this$stateBehaviors","_this$states","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","AudioContext","webkitAudioContext","WaveSurferAudioContext","getOfflineAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","setState","setLength","disconnectFilters","disconnect","setFilter","setFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","dest","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","resume","adjustedTime"],"sourceRoot":""}