{"version":3,"file":"wavesurfer.regions.js","mappings":"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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/regions/index.js","webpack://WaveSurfer/./src/plugin/regions/region.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(self, () => {\nreturn ","/**\n *  @since 4.0.0 This class has been split\n *\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * @property {number[]} maxRegions Maximum number of regions that may be created by the user at one time.\n * `initPlugin('regions')`\n * @property {function} formatTimeCallback Allows custom formating for region tooltip.\n * @property {?number} edgeScrollWidth='5% from container edges' Optional width for edgeScroll to start\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\n * @property {?object} handleStyle A set of CSS properties used to style the left and right handle.\n * @property {?boolean} preventContextMenu=false Determines whether the context menu is prevented from being opened.\n * @property {boolean} showTooltip=true Enable/disable tooltip displaying start and end times when hovering over region.\n */\n\nimport {Region} from \"./region.js\";\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = {\n            ...ws.util,\n            getRegionSnapToGridValue: value => {\n                return this.getRegionSnapToGridValue(value, params);\n            }\n        };\n        this.maxRegions = params.maxRegions;\n        this.regionsMinLength = params.regionsMinLength || null;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        // By default, scroll the container if the user drags a region\n        // within 5% of its edge\n        const scrollWidthProportion = 0.05;\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this.orientation = this.wavesurfer.drawer.orientation;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    region.edgeScrollWidth = this.params.edgeScrollWidth ||\n                        this.wrapper.clientWidth * scrollWidthProportion;\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this.vertical = this.wavesurfer.drawer.params.vertical;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * check to see if adding a new region would exceed maxRegions\n     * @return {boolean} whether we should proceed and create a region\n     * @private\n     */\n    wouldExceedMaxRegions() {\n        return (\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\n        );\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        if (this.wouldExceedMaxRegions()) {\n            return null;\n        }\n\n        if (!params.minLength && this.regionsMinLength) {\n            params = {...params, minLength: this.regionsMinLength};\n        }\n\n        const region = new this.wavesurfer.Region(params, this.util, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        this.disableDragSelection();\n\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth -\n                this.wrapper.clientWidth;\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseleave', eventUp);\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n            this.wrapper.removeEventListener('mouseleave', eventUp);\n        });\n\n        const eventMove = event => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n            if (!region) {\n                region = this.add(params || {});\n                if (!region) {\n                    return;\n                }\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(event);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = orientedEvent.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(event);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n\n        this.wavesurfer.on('region-created', region => {\n            if (this.regionsMinLength) {\n                region.minLength = this.regionsMinLength;\n            }\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n","/**\n *  @since 4.0.0\n *\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nexport class Region {\n    constructor(params, regionsUtils, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.regionsUtil = regionsUtils;\n        this.vertical = ws.drawer.params.vertical;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                this.start +\n                (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        // The left and right handleStyle properties can be set to 'none' for\n        // no styling or can be assigned an object containing CSS properties.\n        this.handleStyle = params.handleStyle || {\n            left: {},\n            right: {}\n        };\n        this.handleLeftEl = null;\n        this.handleRightEl = null;\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n        this.showTooltip = params.showTooltip ?? true;\n\n        this.maxLength = params.maxLength;\n        // It assumes the minLength parameter value, or the regionsMinLength parameter value, if the first one not provided\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n        // Determines whether the context menu is prevented from being opened.\n        this.preventContextMenu =\n            params.preventContextMenu === undefined\n                ? false\n                : Boolean(params.preventContextMenu);\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n\n        if (channelIdx !== -1) {\n            let channelCount =\n                this.wavesurfer.backend.buffer != null\n                    ? this.wavesurfer.backend.buffer.numberOfChannels\n                    : -1;\n            if (channelCount >= 0 && channelIdx < channelCount) {\n                this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n                this.marginTop =\n                    this.wavesurfer.getHeight() * channelIdx + 'px';\n            }\n        }\n\n        this.formatTimeCallback = params.formatTimeCallback;\n        this.edgeScrollWidth = params.edgeScrollWidth;\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params, eventParams) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n            this.updateHandlesResize(this.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this, eventParams);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element.domElement);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        this.loop = true;\n        this.play(start);\n    }\n\n    /**\n     * Set looping on/off.\n     * @param {boolean} loop True if should play in loop\n     */\n    setLoop(loop) {\n        this.loop = loop;\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        this.element = this.util.withOrientation(\n            this.wrapper.appendChild(document.createElement('region')),\n            this.vertical\n        );\n\n        this.element.className = 'wavesurfer-region';\n        if (this.showTooltip) {\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n        this.element.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            this.element.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(this.element, {\n            position: 'absolute',\n            zIndex: 2,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Resize handles */\n        if (this.resize) {\n            this.handleLeftEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n            this.handleRightEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n\n            this.handleLeftEl.className = 'wavesurfer-handle wavesurfer-handle-start';\n            this.handleRightEl.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n            // Default CSS properties for both handles.\n            const css = {\n                cursor: this.vertical ? 'row-resize' : 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '2px',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            };\n\n            // Merge CSS properties per handle.\n            const handleLeftCss =\n                this.handleStyle.left !== 'none'\n                    ? Object.assign(\n                        { left: '0px' },\n                        css,\n                        this.handleStyle.left\n                    )\n                    : null;\n            const handleRightCss =\n                this.handleStyle.right !== 'none'\n                    ? Object.assign(\n                        { right: '0px' },\n                        css,\n                        this.handleStyle.right\n                    )\n                    : null;\n\n            if (handleLeftCss) {\n                this.style(this.handleLeftEl, handleLeftCss);\n            }\n\n            if (handleRightCss) {\n                this.style(this.handleRightEl, handleRightCss);\n            }\n        }\n\n        this.updateRender();\n        this.bindEvents();\n    }\n\n    formatTime(start, end) {\n        if (this.formatTimeCallback) {\n            return this.formatTimeCallback(start, end);\n        }\n        return (start == end ? [start] : [start, end])\n            .map((time) =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        let startLimited = this.start;\n        let endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            if (this.showTooltip) {\n                this.element.title = this.formatTime(this.start, this.end);\n            }\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = (time) => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                const realTime = this.wavesurfer.getCurrentTime();\n                if (realTime >= this.start && realTime <= this.end) {\n                    this.wavesurfer.play(this.start);\n                }\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        const preventContextMenu = this.preventContextMenu;\n\n        this.element.addEventListener('mouseenter', (e) => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', (e) => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        this.element.addEventListener('contextmenu', (e) => {\n            if (preventContextMenu) {\n                e.preventDefault();\n            }\n            this.fireEvent('contextmenu', e);\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        const scrollThreshold = this.scrollThreshold;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n        let regionLeftHalfTime;\n        let regionRightHalfTime;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = (event) => {\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            const x = orientedEvent.clientX;\n            let distanceBetweenCursorAndWrapperEdge = 0;\n            let regionHalfTimeWidth = 0;\n            let adjustment = 0;\n\n            // Get the currently selected time according to the mouse position\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // Considering the point of contact with the region while edgescrolling\n                if (scrollDirection === -1) {\n                    regionHalfTimeWidth = regionLeftHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = x - wrapperRect.left;\n                } else {\n                    regionHalfTimeWidth = regionRightHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = wrapperRect.right - x;\n                }\n            } else {\n                // Considering minLength while edgescroll\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        time = this.start + minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            // Don't edgescroll if region has reached min or max limit\n            const wrapperScrollLeft = this.wrapper.scrollLeft;\n\n            if (scrollDirection === -1) {\n                if (Math.round(wrapperScrollLeft) === 0) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge) <= 0) {\n                    return;\n                }\n            } else {\n                if (Math.round(wrapperScrollLeft) === maxScroll) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge) >= maxScroll) {\n                    return;\n                }\n            }\n\n            // Update scroll position\n            let scrollLeft = wrapperScrollLeft - adjustment + scrollSpeed * scrollDirection;\n\n            if (scrollDirection === -1) {\n                const calculatedLeft = Math.max(0 + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedLeft;\n            } else {\n                const calculatedRight = Math.min(maxScroll - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedRight;\n            }\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(event);\n            });\n        };\n\n        const onDown = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            touchId = event.targetTouches ? event.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                event.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event, true) * duration\n            );\n\n            // Store the selected point of contact when we begin dragging\n            regionLeftHalfTime = startTime - this.start;\n            regionRightHalfTime = this.end - startTime;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (event.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = event.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = (event) => {\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', event);\n                this.wavesurfer.fireEvent('region-update-end', this, event);\n            }\n        };\n        const onMove = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // To maintain relative cursor start point while dragging\n                const maxEnd = this.wavesurfer.getDuration();\n                if (time > maxEnd - regionRightHalfTime) {\n                    time = maxEnd - regionRightHalfTime;\n                }\n\n                if (time - regionLeftHalfTime < 0) {\n                    time = regionLeftHalfTime;\n                }\n            }\n\n            if (resize) {\n                // To maintain relative cursor start point while resizing\n                // we have to handle for minLength\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        time = this.start + minLength;\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            let delta = time - startTime;\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll && container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                // Triggering edgescroll from within edgeScrollWidth\n                let x = orientedEvent.clientX;\n\n                // Check direction\n                if (x < wrapperRect.left + this.edgeScrollWidth) {\n                    scrollDirection = -1;\n                } else if (x > wrapperRect.right - this.edgeScrollWidth) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(event);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        document.body.addEventListener('mousemove', onMove);\n        document.body.addEventListener('touchmove', onMove, {passive: false});\n\n        document.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            document.body.removeEventListener('mousemove', onMove);\n            document.body.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd) {\n            delta = maxEnd - this.end;\n        }\n\n        if (this.start + delta < 0) {\n            delta = this.start * -1;\n        }\n\n        const eventParams = {\n            direction: this._getDragDirection(delta),\n            action: 'drag'\n        };\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        }, eventParams);\n    }\n\n    /**\n     * Returns the direction of dragging region based on delta\n     * Negative delta means region is moving to the left\n     * Positive - to the right\n     * For zero delta the direction is not defined\n     * @param {number} delta Drag offset\n     * @returns {string|null} Direction 'left', 'right' or null\n     */\n    _getDragDirection(delta) {\n        if (delta < 0) {\n            return 'left';\n        }\n        if (delta > 0) {\n            return 'right';\n        }\n        return null;\n    }\n\n    /**\n     * @example\n     * onResize(-5, 'start') // Moves the start point 5 seconds back\n     * onResize(0.5, 'end') // Moves the end point 0.5 seconds forward\n     *\n     * @param {number} delta How much to add or subtract, given in seconds\n     * @param {string} direction 'start 'or 'end'\n     */\n    onResize(delta, direction) {\n        const duration = this.wavesurfer.getDuration();\n        const eventParams = {\n            action: 'resize',\n            direction: direction === 'start' ? 'right' : 'left'\n        };\n\n        if (direction === 'start') {\n            // Check if changing the start by the given delta would result in the region being smaller than minLength\n            // Ignore cases where we are making the region wider rather than shrinking it\n            if (delta > 0 && this.end - (this.start + delta) < this.minLength) {\n                delta = this.end - this.minLength - this.start;\n            }\n\n            if (delta < 0 && (this.start + delta) < 0) {\n                delta = this.start * -1;\n            }\n\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            }, eventParams);\n        } else {\n            // Check if changing the end by the given delta would result in the region being smaller than minLength\n            // Ignore cases where we are making the region wider rather than shrinking it\n            if (delta < 0 && this.end + delta - this.start < this.minLength) {\n                delta = this.start + this.minLength - this.end;\n            }\n\n            if (delta > 0 && (this.end + delta) > duration) {\n                delta = duration - this.end;\n            }\n\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            }, eventParams);\n        }\n    }\n\n    updateHandlesResize(resize) {\n        let cursorStyle;\n        if (resize) {\n            cursorStyle = this.vertical ? 'row-resize' : 'col-resize';\n        } else {\n            cursorStyle = 'auto';\n        }\n\n        this.handleLeftEl && this.style(this.handleLeftEl, { cursor: cursorStyle });\n        this.handleRightEl && this.style(this.handleRightEl, { cursor: cursorStyle });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/regions/index.js\");\n",""],"names":["_region","require","_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","RegionsPlugin","params","ws","_this","wavesurfer","util","getRegionSnapToGridValue","maxRegions","regionsMinLength","observerPrototypeKeys","getOwnPropertyNames","Observer","Region","scrollWidthProportion","_onBackendCreated","wrapper","drawer","orientation","regions","region","edgeScrollWidth","clientWidth","add","list","_onReady","vertical","dragSelection","enableDragSelection","id","updateRender","init","isReady","once","destroy","un","disableDragSelection","clear","wouldExceedMaxRegions","_this2","minLength","on","_this3","remove","_this4","slop","container","scroll","scrollParent","scrollSpeed","scrollThreshold","drag","duration","getDuration","maxScroll","start","touchId","pxMove","scrollDirection","wrapperRect","edgeScroll","e","scrollLeft","Math","min","max","end","handleEvent","update","window","requestAnimationFrame","eventDown","touches","targetTouches","identifier","scrollWidth","withOrientation","getBoundingClientRect","addEventListener","removeEventListener","eventUp","preventClick","fireEvent","document","body","eventMove","event","startUpdate","endUpdate","orientedEvent","x","clientX","left","right","getCurrentRegion","_this5","time","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset","round","create","name","deferInit","addRegion","options","initialisedPluginList","initPlugin","clearRegions","exports","default","module","regionsUtils","_params$showTooltip","style","regionsUtil","getId","resize","Boolean","isResizing","isDragging","loop","color","handleStyle","handleLeftEl","handleRightEl","data","attributes","showTooltip","maxLength","_onRedraw","preventContextMenu","channelIdx","parseInt","regionHeight","marginTop","channelCount","backend","buffer","numberOfChannels","floor","getHeight","formatTimeCallback","bindInOut","render","eventParams","updateHandlesResize","element","removeChild","domElement","play","s","playLoop","setLoop","appendChild","createElement","className","title","formatTime","setAttribute","attrname","position","zIndex","height","top","css","cursor","width","backgroundColor","handleLeftCss","assign","handleRightCss","bindEvents","map","slice","join","getWidth","pixelRatio","dur","startLimited","endLimited","regionWidth","firedIn","firedOut","onProcess","realTime","preventDefault","stopPropagation","bindDragEvents","startTime","updated","regionLeftHalfTime","regionRightHalfTime","distanceBetweenCursorAndWrapperEdge","regionHalfTimeWidth","adjustment","minPxPerSec","wrapperScrollLeft","calculatedLeft","calculatedRight","delta","onDrag","onResize","onDown","tagName","toLowerCase","classList","contains","onUp","onMove","oldTime","maxEnd","passive","direction","_getDragDirection","action","cursorStyle"],"sourceRoot":""}