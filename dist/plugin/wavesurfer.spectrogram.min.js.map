{"version":3,"file":"wavesurfer.spectrogram.min.js","mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,aAAc,GAAIH,GACC,iBAAZC,QACdA,QAAoB,WAAID,KAExBD,EAAiB,WAAIA,EAAiB,YAAK,CAAC,EAAGA,EAAiB,WAAe,YAAIC,IACpF,CATD,CASGK,MAAM,IACT,M,2FCAe,SAAaC,EAAYC,EAAYC,EAAYC,GAc5D,OAbAC,KAAKJ,WAAaA,EAClBI,KAAKH,WAAaA,EAClBG,KAAKC,UAAa,EAAIL,GAAeC,EAAa,GAElDG,KAAKE,SAAW,IAAIC,aAAaP,GACjCI,KAAKI,SAAW,IAAID,aAAaP,GACjCI,KAAKK,aAAe,IAAIF,aAAaP,GACrCI,KAAKM,aAAe,IAAIC,YAAYX,GAEpCI,KAAKQ,SAAW,EAChBR,KAAKS,KAAO,EAGJX,GACJ,IAAK,WACD,IAAKY,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GACb,GAAKd,EAAa,KACjBA,EAAa,GAAK,EAAIe,KAAKC,IAAIF,GAAKd,EAAa,GAAK,IAEhE,MACJ,IAAK,eACD,IAAKc,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GACd,IACA,IAAOC,KAAKC,IAAIF,GAAKd,EAAa,GAAK,IACvC,IAAOe,KAAKE,IAAe,EAAVF,KAAKG,GAASJ,GAAMd,EAAa,IAE1D,MACJ,IAAK,WAED,IADAG,EAAQA,GAAS,IACZW,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,IACb,EAAIX,GAAS,EACd,GAAMY,KAAKE,IAAe,EAAVF,KAAKG,GAASJ,GAAMd,EAAa,IAChDG,EAAQ,EACLY,KAAKE,IAAK,EAAIF,KAAKG,GAAKJ,GAAMd,EAAa,IAEvD,MACJ,IAAK,SACD,IAAKc,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GAAKC,KAAKE,IACvBF,KAAKG,GAAKJ,GAAMd,EAAa,GAAKe,KAAKG,GAAK,GAGrD,MACJ,IAAK,QAED,IADAf,EAAQA,GAAS,IACZW,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GAAKC,KAAKI,IACxBJ,KAAKK,GACJ,GACGL,KAAKI,KACAL,GAAKd,EAAa,GAAK,IAClBG,GAASH,EAAa,GAAM,GAClC,IAIhB,MACJ,IAAK,UACD,IAAKc,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GACd,IACA,IAAOC,KAAKE,IAAe,EAAVF,KAAKG,GAASJ,GAAMd,EAAa,IAE1D,MACJ,IAAK,OACL,UAAKqB,EACD,IAAKP,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GACd,IAAO,EAAIC,KAAKE,IAAe,EAAVF,KAAKG,GAASJ,GAAMd,EAAa,KAE9D,MACJ,IAAK,UACD,IAAKc,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GACdC,KAAKO,IAAIP,KAAKG,IAAO,EAAIJ,GAAMd,EAAa,GAAK,KAChDe,KAAKG,IAAO,EAAIJ,GAAMd,EAAa,GAAK,IAEjD,MACJ,IAAK,cACD,IAAKc,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GAAK,EAE3B,MACJ,IAAK,aACD,IAAKA,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKK,aAAaK,GACb,EAAId,GACJA,EAAa,EAAIe,KAAKC,IAAIF,GAAKd,EAAa,GAAK,IAE1D,MACJ,QACI,MAAMuB,MAAM,4BAA8BrB,EAAa,KAG/D,IAEIY,EAFAU,EAAQ,EACRC,EAAMzB,GAAc,EAGxB,KAAOwB,EAAQxB,GAAY,CACvB,IAAKc,EAAI,EAAGA,EAAIU,EAAOV,IACnBV,KAAKM,aAAaI,EAAIU,GAASpB,KAAKM,aAAaI,GAAKW,EAG1DD,IAAiB,EACjBC,IAAa,CACjB,CAEA,IAAKX,EAAI,EAAGA,EAAId,EAAYc,IACxBV,KAAKE,SAASQ,GAAKC,KAAKO,KAAKP,KAAKG,GAAKJ,GACvCV,KAAKI,SAASM,GAAKC,KAAKE,KAAKF,KAAKG,GAAKJ,GAG3CV,KAAKsB,kBAAoB,SAASC,GAE9B,IAQIC,EACAC,EACAC,EAVA9B,EAAaI,KAAKJ,WAClBQ,EAAWJ,KAAKI,SAChBF,EAAWF,KAAKE,SAChBI,EAAeN,KAAKM,aACpBqB,EAAO,IAAIxB,aAAaP,GACxBgC,EAAO,IAAIzB,aAAaP,GACxBiC,EAAM,EAAI7B,KAAKJ,WACfkC,EAAOnB,KAAKmB,KAIZC,EAAW,IAAI5B,aAAaP,EAAa,GAEzCoC,EAAIrB,KAAKsB,MAAMtB,KAAKuB,IAAItC,GAAce,KAAKwB,KAE/C,GAAIxB,KAAKI,IAAI,EAAGiB,KAAOpC,EACnB,KAAM,6CAEV,GAAIA,IAAe2B,EAAOa,OACtB,KAAM,kEACFxC,EACA,iBACA2B,EAAOa,OAaf,IAVA,IACIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EARAC,EAAW,EAUNnC,EAAI,EAAGA,EAAId,EAAYc,IAC5BiB,EAAKjB,GACDa,EAAOjB,EAAaI,IAAMV,KAAKK,aAAaC,EAAaI,IAC7DkB,EAAKlB,GAAK,EAGd,KAAOmC,EAAWjD,GAAY,CAC1ByC,EAAqBjC,EAASyC,GAC9BP,EAAqBpC,EAAS2C,GAE9BN,EAAwB,EACxBC,EAAwB,EAExB,IAAK,IAAIM,EAAU,EAAGA,EAAUD,EAAUC,IAAW,CAGjD,IAFIpC,EAAIoC,EAEDpC,EAAId,GAEP8C,EACIH,EAAwBZ,EAF5Bc,EAAM/B,EAAImC,GAGNL,EAAwBZ,EAAKa,GACjCE,EACIJ,EAAwBX,EAAKa,GAC7BD,EAAwBb,EAAKc,GAEjCd,EAAKc,GAAOd,EAAKjB,GAAKgC,EACtBd,EAAKa,GAAOb,EAAKlB,GAAKiC,EACtBhB,EAAKjB,IAAMgC,EACXd,EAAKlB,IAAMiC,EAEXjC,GAAKmC,GAAY,EAIrBN,GADAK,EAAUL,GAEIF,EACVG,EAAwBF,EAC5BE,EACII,EAAUN,EACVE,EAAwBH,CAChC,CAEAQ,IAAuB,CAC3B,CAESnC,EAAI,EAAb,IAAK,IAAWqC,EAAInD,EAAa,EAAGc,EAAIqC,EAAGrC,KAGvCgB,EAAMG,EAAMC,GAFZN,EAAOG,EAAKjB,IAEYc,GADxBC,EAAOG,EAAKlB,IAC0Be,IAE5BzB,KAAKS,OACXT,KAAKQ,SAAWE,EAChBV,KAAKS,KAAOiB,GAEhBK,EAASrB,GAAKgB,EAElB,OAAOK,CACX,CACJ,EAACvC,EAAAD,QAAAA,EAAAyD,O,kFC3ND,IAAwBC,EAAxBC,GAAwBD,EAAxBE,EAAA,OAAwBF,EAAAG,WAAAH,EAAA,CAAAD,QAAAC,GAAA,SAAAI,EAAAJ,GAAA,OAAAI,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAN,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAK,QAAAL,EAAAO,cAAAF,QAAAL,IAAAK,OAAAG,UAAA,gBAAAR,CAAA,EAAAI,EAAAJ,EAAA,UAAAS,IADxBA,EAAA,kBAAAnE,CAAA,MAAAA,EAAA,GAAAoE,EAAAC,OAAAH,UAAAI,EAAAF,EAAAG,eAAAC,EAAAH,OAAAG,gBAAA,SAAAd,EAAAe,EAAAC,GAAAhB,EAAAe,GAAAC,EAAAC,KAAA,EAAAC,EAAA,mBAAAb,OAAAA,OAAA,GAAAc,EAAAD,EAAAZ,UAAA,aAAAc,EAAAF,EAAAG,eAAA,kBAAAC,EAAAJ,EAAAK,aAAA,yBAAA/E,EAAAwD,EAAAe,EAAAE,GAAA,OAAAN,OAAAG,eAAAd,EAAAe,EAAA,CAAAE,MAAAA,EAAAO,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAA1B,EAAAe,EAAA,KAAAvE,EAAA,aAAAmF,GAAAnF,EAAA,SAAAwD,EAAAe,EAAAE,GAAA,OAAAjB,EAAAe,GAAAE,CAAA,WAAAW,EAAAC,EAAAC,EAAApF,EAAAqF,GAAA,IAAAC,EAAAF,GAAAA,EAAAtB,qBAAAyB,EAAAH,EAAAG,EAAAC,EAAAvB,OAAAwB,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAAjB,EAAAoB,EAAA,WAAAjB,MAAAqB,EAAAT,EAAAnF,EAAA0F,KAAAF,CAAA,UAAAK,EAAAC,EAAAxC,EAAAyC,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAA3C,EAAAyC,GAAA,OAAAd,GAAA,OAAAe,KAAA,QAAAD,IAAAd,EAAA,EAAArF,EAAAsF,KAAAA,EAAA,IAAAgB,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAvG,EAAAuG,EAAA5B,GAAA,8BAAA6B,EAAArC,OAAAsC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAxC,GAAAE,EAAA+B,KAAAO,EAAA/B,KAAA4B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAAyB,EAAAzB,UAAAG,OAAAwB,OAAAY,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAA/G,EAAAgE,EAAA+C,GAAA,SAAAd,GAAA,YAAAe,QAAAD,EAAAd,EAAA,gBAAAgB,EAAAvB,EAAAwB,GAAA,SAAAC,EAAAJ,EAAAd,EAAAmB,EAAAC,GAAA,IAAAC,EAAAvB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAqB,EAAApB,KAAA,KAAAqB,EAAAD,EAAArB,IAAAxB,EAAA8C,EAAA9C,MAAA,OAAAA,GAAA,UAAAb,EAAAa,IAAAL,EAAA+B,KAAA1B,EAAA,WAAAyC,EAAAE,QAAA3C,EAAA+C,SAAAC,MAAA,SAAAhD,GAAA0C,EAAA,OAAA1C,EAAA2C,EAAAC,EAAA,aAAAlC,GAAAgC,EAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAA3C,GAAAgD,MAAA,SAAAC,GAAAH,EAAA9C,MAAAiD,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAArB,IAAA,KAAA2B,EAAAtD,EAAA,gBAAAG,MAAA,SAAAsC,EAAAd,GAAA,SAAA4B,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAd,EAAAmB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA/B,EAAAT,EAAAnF,EAAA0F,GAAA,IAAAkC,EAAA,iCAAAf,EAAAd,GAAA,iBAAA6B,EAAA,UAAApG,MAAA,iDAAAoG,EAAA,cAAAf,EAAA,MAAAd,EAAA,OAAA8B,GAAA,KAAAnC,EAAAmB,OAAAA,EAAAnB,EAAAK,IAAAA,IAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAArC,EAAAmB,OAAAnB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,IAAA,gBAAAL,EAAAmB,QAAAnB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA6B,EAAA,gBAAAR,EAAAvB,EAAAV,EAAAnF,EAAA0F,GAAA,cAAA0B,EAAApB,KAAA,IAAA4B,EAAAlC,EAAA2C,KAAA,6BAAAjB,EAAArB,MAAAG,EAAA,gBAAA3B,MAAA6C,EAAArB,IAAAsC,KAAA3C,EAAA2C,KAAA,WAAAjB,EAAApB,OAAA4B,EAAA,YAAAlC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAqB,EAAArB,IAAA,YAAAiC,EAAAF,EAAApC,GAAA,IAAA4C,EAAA5C,EAAAmB,OAAAA,EAAAiB,EAAAlE,SAAA0E,GAAA,QAAAhH,IAAAuF,EAAA,OAAAnB,EAAAoC,SAAA,eAAAQ,GAAAR,EAAAlE,SAAA2E,SAAA7C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAzE,EAAA0G,EAAAF,EAAApC,GAAA,UAAAA,EAAAmB,SAAA,WAAAyB,IAAA5C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAyC,UAAA,oCAAAF,EAAA,aAAApC,EAAA,IAAAkB,EAAAvB,EAAAgB,EAAAiB,EAAAlE,SAAA8B,EAAAK,KAAA,aAAAqB,EAAApB,KAAA,OAAAN,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAoC,SAAA,KAAA5B,EAAA,IAAAuC,EAAArB,EAAArB,IAAA,OAAA0C,EAAAA,EAAAJ,MAAA3C,EAAAoC,EAAAY,YAAAD,EAAAlE,MAAAmB,EAAAiD,KAAAb,EAAAc,QAAA,WAAAlD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAzE,GAAAoE,EAAAoC,SAAA,KAAA5B,GAAAuC,GAAA/C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAAyC,UAAA,oCAAA9C,EAAAoC,SAAA,KAAA5B,EAAA,UAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAApB,KAAA,gBAAAoB,EAAArB,IAAAgD,EAAAQ,WAAAnC,CAAA,UAAAzB,EAAAN,GAAA,KAAA+D,WAAA,EAAAJ,OAAA,SAAA3D,EAAAuB,QAAAiC,EAAA,WAAAW,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAhF,GAAA,GAAAiF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAhH,QAAA,KAAA1B,GAAA,EAAA4H,EAAA,SAAAA,IAAA,OAAA5H,EAAA0I,EAAAhH,QAAA,GAAAyB,EAAA+B,KAAAwD,EAAA1I,GAAA,OAAA4H,EAAApE,MAAAkF,EAAA1I,GAAA4H,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAApE,WAAAjD,EAAAqH,EAAAN,MAAA,EAAAM,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAd,EAAA,UAAAA,IAAA,OAAAtD,WAAAjD,EAAA+G,MAAA,UAAAlC,EAAArC,UAAAsC,EAAAhC,EAAAsC,EAAA,eAAAnC,MAAA6B,EAAArB,cAAA,IAAAX,EAAAgC,EAAA,eAAA7B,MAAA4B,EAAApB,cAAA,IAAAoB,EAAAyD,YAAA9J,EAAAsG,EAAAxB,EAAA,qBAAAhF,EAAAiK,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAjG,YAAA,QAAAkG,IAAAA,IAAA5D,GAAA,uBAAA4D,EAAAH,aAAAG,EAAAC,MAAA,EAAApK,EAAAqK,KAAA,SAAAH,GAAA,OAAA7F,OAAAiG,eAAAjG,OAAAiG,eAAAJ,EAAA1D,IAAA0D,EAAAK,UAAA/D,EAAAtG,EAAAgK,EAAAlF,EAAA,sBAAAkF,EAAAhG,UAAAG,OAAAwB,OAAAiB,GAAAoD,CAAA,EAAAlK,EAAAwK,MAAA,SAAArE,GAAA,OAAAuB,QAAAvB,EAAA,EAAAY,EAAAI,EAAAjD,WAAAhE,EAAAiH,EAAAjD,UAAAY,GAAA,0BAAA9E,EAAAmH,cAAAA,EAAAnH,EAAAyK,MAAA,SAAAlF,EAAAC,EAAApF,EAAAqF,EAAA2B,QAAA,IAAAA,IAAAA,EAAAsD,SAAA,IAAAC,EAAA,IAAAxD,EAAA7B,EAAAC,EAAAC,EAAApF,EAAAqF,GAAA2B,GAAA,OAAApH,EAAAiK,oBAAAzE,GAAAmF,EAAAA,EAAA5B,OAAApB,MAAA,SAAAF,GAAA,OAAAA,EAAAgB,KAAAhB,EAAA9C,MAAAgG,EAAA5B,MAAA,KAAAhC,EAAAD,GAAA5G,EAAA4G,EAAA9B,EAAA,aAAA9E,EAAA4G,EAAAjC,GAAA,0BAAA3E,EAAA4G,EAAA,qDAAA9G,EAAA4K,KAAA,SAAAC,GAAA,IAAAC,EAAAzG,OAAAwG,GAAAD,EAAA,WAAAnG,KAAAqG,EAAAF,EAAAnB,KAAAhF,GAAA,OAAAmG,EAAAG,UAAA,SAAAhC,IAAA,KAAA6B,EAAA/H,QAAA,KAAA4B,EAAAmG,EAAAI,MAAA,GAAAvG,KAAAqG,EAAA,OAAA/B,EAAApE,MAAAF,EAAAsE,EAAAN,MAAA,EAAAM,CAAA,QAAAA,EAAAN,MAAA,EAAAM,CAAA,GAAA/I,EAAA6G,OAAAA,EAAAd,EAAA7B,UAAA,CAAAD,YAAA8B,EAAA6D,MAAA,SAAAqB,GAAA,QAAAC,KAAA,OAAAnC,KAAA,OAAAV,KAAA,KAAAC,WAAA5G,EAAA,KAAA+G,MAAA,OAAAP,SAAA,UAAAjB,OAAA,YAAAd,SAAAzE,EAAA,KAAA8H,WAAAxC,QAAA0C,IAAAuB,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAA7G,EAAA+B,KAAA,KAAA+D,KAAAL,OAAAK,EAAAgB,MAAA,WAAAhB,QAAA1I,EAAA,EAAA2J,KAAA,gBAAA5C,MAAA,MAAA6C,EAAA,KAAA9B,WAAA,GAAAG,WAAA,aAAA2B,EAAAlF,KAAA,MAAAkF,EAAAnF,IAAA,YAAAlE,IAAA,EAAAsG,kBAAA,SAAAgD,GAAA,QAAA9C,KAAA,MAAA8C,EAAA,IAAAzF,EAAA,cAAA0F,EAAAC,EAAAC,GAAA,OAAAlE,EAAApB,KAAA,QAAAoB,EAAArB,IAAAoF,EAAAzF,EAAAiD,KAAA0C,EAAAC,IAAA5F,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAzE,KAAAgK,CAAA,SAAAvK,EAAA,KAAAqI,WAAA3G,OAAA,EAAA1B,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAAK,WAAArI,GAAAqG,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAoC,EAAA,UAAArC,EAAAC,QAAA,KAAA8B,KAAA,KAAAS,EAAArH,EAAA+B,KAAA8C,EAAA,YAAAyC,EAAAtH,EAAA+B,KAAA8C,EAAA,iBAAAwC,GAAAC,EAAA,SAAAV,KAAA/B,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,WAAA6B,KAAA/B,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,WAAA,SAAAqC,GAAA,QAAAT,KAAA/B,EAAAE,SAAA,OAAAmC,EAAArC,EAAAE,UAAA,YAAAuC,EAAA,UAAAhK,MAAA,kDAAAsJ,KAAA/B,EAAAG,WAAA,OAAAkC,EAAArC,EAAAG,WAAA,KAAAd,OAAA,SAAApC,EAAAD,GAAA,QAAAhF,EAAA,KAAAqI,WAAA3G,OAAA,EAAA1B,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAAK,WAAArI,GAAA,GAAAgI,EAAAC,QAAA,KAAA8B,MAAA5G,EAAA+B,KAAA8C,EAAA,oBAAA+B,KAAA/B,EAAAG,WAAA,KAAAuC,EAAA1C,EAAA,OAAA0C,IAAA,UAAAzF,GAAA,aAAAA,IAAAyF,EAAAzC,QAAAjD,GAAAA,GAAA0F,EAAAvC,aAAAuC,EAAA,UAAArE,EAAAqE,EAAAA,EAAAlC,WAAA,UAAAnC,EAAApB,KAAAA,EAAAoB,EAAArB,IAAAA,EAAA0F,GAAA,KAAA5E,OAAA,YAAA8B,KAAA8C,EAAAvC,WAAAhD,GAAA,KAAAwF,SAAAtE,EAAA,EAAAsE,SAAA,SAAAtE,EAAA+B,GAAA,aAAA/B,EAAApB,KAAA,MAAAoB,EAAArB,IAAA,gBAAAqB,EAAApB,MAAA,aAAAoB,EAAApB,KAAA,KAAA2C,KAAAvB,EAAArB,IAAA,WAAAqB,EAAApB,MAAA,KAAAnE,KAAA,KAAAkE,IAAAqB,EAAArB,IAAA,KAAAc,OAAA,cAAA8B,KAAA,kBAAAvB,EAAApB,MAAAmD,IAAA,KAAAR,KAAAQ,GAAAjD,CAAA,EAAAyF,OAAA,SAAAzC,GAAA,QAAAnI,EAAA,KAAAqI,WAAA3G,OAAA,EAAA1B,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAAK,WAAArI,GAAA,GAAAgI,EAAAG,aAAAA,EAAA,YAAAwC,SAAA3C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,CAAA,GAAA0F,MAAA,SAAA5C,GAAA,QAAAjI,EAAA,KAAAqI,WAAA3G,OAAA,EAAA1B,GAAA,IAAAA,EAAA,KAAAgI,EAAA,KAAAK,WAAArI,GAAA,GAAAgI,EAAAC,SAAAA,EAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAApB,KAAA,KAAA6F,EAAAzE,EAAArB,IAAAuD,EAAAP,EAAA,QAAA8C,CAAA,YAAArK,MAAA,0BAAAsK,cAAA,SAAArC,EAAAf,EAAAE,GAAA,YAAAd,SAAA,CAAAlE,SAAA6C,EAAAgD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAA/B,SAAA,KAAAd,SAAAzE,GAAA4E,CAAA,GAAAtG,CAAA,UAAAmM,EAAAC,EAAA9E,EAAAC,EAAA8E,EAAAC,EAAA7H,EAAA0B,GAAA,QAAA0C,EAAAuD,EAAA3H,GAAA0B,GAAAxB,EAAAkE,EAAAlE,KAAA,OAAAkD,GAAA,YAAAN,EAAAM,EAAA,CAAAgB,EAAAJ,KAAAnB,EAAA3C,GAAA+F,QAAApD,QAAA3C,GAAAgD,KAAA0E,EAAAC,EAAA,UAAAC,EAAAC,EAAAC,GAAA,QAAAtL,EAAA,EAAAA,EAAAsL,EAAA5J,OAAA1B,IAAA,KAAAuL,EAAAD,EAAAtL,GAAAuL,EAAAxH,WAAAwH,EAAAxH,aAAA,EAAAwH,EAAAvH,cAAA,YAAAuH,IAAAA,EAAAtH,UAAA,GAAAf,OAAAG,eAAAgI,GAAArG,EAAAuG,EAAAjI,IAAAA,WAAA,SAAAkI,EAAAC,GAAA,cAAA9I,EAAA6I,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAA5I,OAAA+I,aAAA,QAAApL,IAAAmL,EAAA,KAAAE,EAAAF,EAAAxG,KAAAsG,EAAAC,GAAA,yBAAA9I,EAAAiJ,GAAA,OAAAA,EAAA,UAAAnE,UAAA,kEAAAgE,EAAAI,OAAAC,QAAAN,EAAA,CAAAO,CAAA/G,EAAA,qBAAArC,EAAAW,GAAAA,EAAAuI,OAAAvI,IAAAiI,EAAA,KAAAvG,EAAA1B,CAAA,CA2BA,IAyBqB0I,EAAiB,WAsBlC,SAAAA,EAAYC,EAAQC,GAAI,IAAAC,EAAA,MA1E5B,SAAAC,EAAAC,GAAA,KAAAD,aAAAC,GAAA,UAAA5E,UAAA,qCA0E4B6E,CAAA,KAAAN,GAAA,KA+KxBO,gBAAe,eAzPnBxH,EAyPmByH,GAzPnBzH,EAyPmB/B,IAAAkG,MAAG,SAAAuD,EAAOC,GAAe,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhN,EAAAiN,EAAAC,EAAAC,EAAAC,EAAA,OAAApK,IAAAmB,MAAA,SAAAkJ,GAAA,cAAAA,EAAAtD,KAAAsD,EAAAzF,MAAA,OAaN,GAZzBgB,MAAM8D,EAAgB,GAAG,MAG1BA,EAAkB,CAACA,IAIvBP,EAAKmB,QAAQC,MAAMT,OAASX,EAAKW,OAASJ,EAAgBhL,OAAS,KAEnEyK,EAAKqB,OAAOT,MAAQZ,EAAKY,MACzBZ,EAAKqB,OAAOV,OAASX,EAAKW,OAASJ,EAAgBhL,OAE7CiL,EAAWR,EAAKQ,SACP,CAAFU,EAAAzF,KAAA,eAAAyF,EAAAhG,OAAA,iBAGJuF,EAAI,EAAC,YAAEA,EAAIF,EAAgBhL,QAAM,CAAA2L,EAAAzF,KAAA,SAKtC,IAJMiF,EAASH,EAAgBE,GACzBE,EAASD,EAAO,GAAGnL,OACnBqL,EAAQF,EAAOnL,OACfsL,EAAY,IAAIS,UAAUV,EAAOD,GAC9B9M,EAAI,EAAGA,EAAI+M,EAAO/M,IACvB,IAASiN,EAAI,EAAGA,EAAIH,EAAQG,IAClBC,EAAWf,EAAKe,SAASL,EAAO7M,GAAGiN,IACnCE,EAA4C,IAA/BL,EAAS,EAAIG,GAAKF,EAAQ/M,GAC7CgN,EAAUU,KAAKP,GAA0B,IAAdD,EAAS,GACpCF,EAAUU,KAAKP,EAAW,GAAmB,IAAdD,EAAS,GACxCF,EAAUU,KAAKP,EAAW,GAAmB,IAAdD,EAAS,GACxCF,EAAUU,KAAKP,EAAW,GAAmB,IAAdD,EAAS,GAE/C,OAAAG,EAAAzF,KAAA,GAEsB+F,kBAAkBX,GAAU,QAA7CI,EAAQC,EAAAnG,KACdyF,EAASiB,UACLR,EACA,EACA,EACAL,EACAD,EACA,EACA,EACAX,EAAKY,MACLZ,EAAKW,QACP,QA3BsCF,IAAGS,EAAAzF,KAAA,iCAAAyF,EAAAnD,OAAA,GAAAuC,EAAA,IA1QvD,eAAAxN,EAAA,KAAA4O,EAAAC,UAAA,WAAAvE,SAAA,SAAApD,EAAAC,GAAA,IAAA6E,EAAAlG,EAAAgJ,MAAA9O,EAAA4O,GAAA,SAAA3C,EAAA1H,GAAAwH,EAAAC,EAAA9E,EAAAC,EAAA8E,EAAAC,EAAA,OAAA3H,EAAA,UAAA2H,EAAAjH,GAAA8G,EAAAC,EAAA9E,EAAAC,EAAA8E,EAAAC,EAAA,QAAAjH,EAAA,CAAAgH,OAAA3K,EAAA,MAuSK,gBAAAyN,GAAA,OAAAxB,EAAAuB,MAAA,KAAAD,UAAA,EA9Cc,GA9KXxO,KAAK2M,OAASA,EACd3M,KAAK2O,WAAa/B,EAClB5M,KAAK4O,KAAOhC,EAAGgC,KAEf5O,KAAK6O,mBAAqBlC,EAAOkC,mBACjC7O,KAAK8O,UAAY,SAACC,GACdlC,EAAKmC,aAAaD,EACtB,EACA/O,KAAKiP,UAAY,WACbpC,EAAKqC,QACT,EACAlP,KAAKmP,gBAAkB,SAACJ,GACpBlC,EAAKuC,qBAAqBL,EAC9B,EACA/O,KAAKqP,SAAW,WACZ,IAAMC,EAAUzC,EAAKyC,OAAS1C,EAAG0C,OAOjC,GALAzC,EAAK0C,UACD,iBAAmB5C,EAAO4C,UACpBC,SAASC,cAAc9C,EAAO4C,WAC9B5C,EAAO4C,WAEZ1C,EAAK0C,UACN,MAAMpO,MAAM,2CAEhB,GAAIwL,EAAOiB,SAAU,CACjB,GAAIjB,EAAOiB,SAASxL,OAAS,IACzB,MAAM,IAAIjB,MAAM,sCAEpB,IAAK,IAAIT,EAAI,EAAGA,EAAIiM,EAAOiB,SAASxL,OAAQ1B,IAAK,CAE7C,GAAuB,IADPiM,EAAOiB,SAASlN,GACpB0B,OACR,MAAM,IAAIjB,MACN,yCAGZ,CACA0L,EAAKe,SAAWjB,EAAOiB,QAC3B,KAAO,CACHf,EAAKe,SAAW,GAChB,IAAK,IAAIlN,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAM0J,GAAO,IAAM1J,GAAK,IACxBmM,EAAKe,SAAS5E,KAAK,CAACoB,EAAKA,EAAKA,EAAK,GACvC,CACJ,CACAyC,EAAKY,MAAQ6B,EAAO7B,MACpBZ,EAAK6C,WAAa7C,EAAKF,OAAO+C,YAAc9C,EAAGD,OAAO+C,WACtD7C,EAAK8C,WACD9C,EAAKF,OAAOgD,YAAc/C,EAAGD,OAAOgD,YAAc,IACtD9C,EAAKW,OAASX,EAAK8C,WAAa,EAChC9C,EAAK+C,SAAWjD,EAAOiD,SACvB/C,EAAK/M,WAAa6M,EAAO7M,WACzB+M,EAAK9M,MAAQ4M,EAAO5M,MAEpB8M,EAAKgD,gBACLhD,EAAKiD,eACLjD,EAAKqC,SAELI,EAAOtB,QAAQ+B,iBAAiB,SAAUlD,EAAKiC,WAC/ClC,EAAGoD,GAAG,SAAUnD,EAAKoC,UACzB,CACJ,CAxIJ,IAAAlC,EAAAkD,EAAAC,EAwEK,OAxELnD,EAwIKL,EAxILwD,EAoeK,EAAAlM,IAAA,SAAAE,MAtaD,SAAcyI,GACV,MAAO,CACHhD,KAAM,cACNwG,aAAWxD,IAAUA,EAAOwD,YAAYxD,EAAOwD,UAC/CxD,OAAQA,EACRuD,YAAa,CACTE,IAAKA,EAAAA,SAETtD,SAAUJ,EAElB,KAxEJuD,EAwIK,EAAAjM,IAAA,OAAAE,MAED,WAEQlE,KAAK2O,WAAW0B,QAChBrQ,KAAKqP,WAELrP,KAAK2O,WAAW2B,KAAK,QAAStQ,KAAKqP,SAE3C,GAAC,CAAArL,IAAA,UAAAE,MAED,WACIlE,KAAKuQ,QACLvQ,KAAK2O,WAAW6B,GAAG,QAASxQ,KAAKqP,UACjCrP,KAAK2O,WAAW6B,GAAG,SAAUxQ,KAAKiP,WAClCjP,KAAKsP,QACDtP,KAAKsP,OAAOtB,QAAQyC,oBAAoB,SAAUzQ,KAAK8O,WAC3D9O,KAAK2O,WAAa,KAClB3O,KAAK4O,KAAO,KACZ5O,KAAK2M,OAAS,KACV3M,KAAKgO,UACLhO,KAAKgO,QAAQyC,oBAAoB,QAASzQ,KAAKmP,iBAC/CnP,KAAKgO,QAAQ0C,WAAWC,YAAY3Q,KAAKgO,SACzChO,KAAKgO,QAAU,KAEvB,GAAC,CAAAhK,IAAA,gBAAAE,MAED,WACI,IAAM0M,EAAkB5Q,KAAKuP,UAAUE,cAAc,eACjDmB,GACA5Q,KAAKuP,UAAUoB,YAAYC,GAE/B,IAAMC,EAAW7Q,KAAK2O,WAAWhC,OAGjC,GAFA3M,KAAKgO,QAAUwB,SAASsB,cAAc,eAElC9Q,KAAK2M,OAAOoE,OAAQ,CACpB,IAAMC,EAAYhR,KAAKgR,SAAWxB,SAASsB,cAAc,UACzDE,EAASC,UAAUC,IAAI,eACvBlR,KAAKsP,OAAOrB,MAAM+C,EAAU,CACxBG,KAAM,EACNC,SAAU,WACVC,OAAQ,EACR7D,OAAQ,GAAF8D,OAAKtR,KAAKwN,OAASxN,KAAK0P,WAAU,MACxCjC,MAAO,GAAF6D,OAAK,GAAKtR,KAAK0P,WAAU,QAElC1P,KAAKgO,QAAQuD,YAAYP,GACzBhR,KAAKwR,WACD,qBACA,OACA,OACA,GACA,OACA,UACA,SACA,cAER,CAEAxR,KAAKsP,OAAOrB,MAAMjO,KAAKgO,QAAS,CAC5ByD,QAAS,QACTL,SAAU,WACVM,WAAY,OACZC,iBAAkB,OAClBnE,OAAQ,GAAF8D,OAAKtR,KAAKwN,OAASxN,KAAK0P,WAAU,SAGxCmB,EAASe,YAAcf,EAASgB,eAChC7R,KAAKsP,OAAOrB,MAAMjO,KAAKgO,QAAS,CAC5BP,MAAO,OACPqE,UAAW,SACXC,UAAW,WAGnB/R,KAAKuP,UAAUgC,YAAYvR,KAAKgO,SAEhChO,KAAKgO,QAAQ+B,iBAAiB,QAAS/P,KAAKmP,gBAChD,GAAC,CAAAnL,IAAA,uBAAAE,MAED,SAAqB8N,GACjBA,EAAMC,iBACN,IAAMC,EAAO,YAAaF,EAAQA,EAAMG,QAAUH,EAAMI,OACxDpS,KAAKqS,UAAU,QAASH,EAAOlS,KAAKyN,OAAS,EACjD,GAAC,CAAAzJ,IAAA,eAAAE,MAED,WACI,IAAMgK,EAAUlO,KAAKkO,OAASlO,KAAKgO,QAAQuD,YACvC/B,SAASsB,cAAc,WAG3B9Q,KAAKqN,SAAWa,EAAOoE,WAAW,MAElCtS,KAAK4O,KAAKX,MAAMC,EAAQ,CACpBkD,SAAU,WACVC,OAAQ,GAEhB,GAAC,CAAArN,IAAA,SAAAE,MAED,WACIlE,KAAKuS,oBAEDvS,KAAK6O,mBACL7O,KAAKwS,oBAAoBxS,KAAK6O,oBAE9B7O,KAAKyS,eAAezS,KAAKiN,gBAEjC,GAAC,CAAAjJ,IAAA,oBAAAE,MAED,WACI,IAAMuJ,EAAQ9M,KAAK+R,MAAM1S,KAAKyN,MAAQzN,KAAK0P,YAAc,KACzD1P,KAAKkO,OAAOT,MAAQzN,KAAKyN,MACzBzN,KAAKkO,OAAOV,OAASxN,KAAKwN,OAC1BxN,KAAKkO,OAAOD,MAAMR,MAAQA,CAC9B,GAAC,CAAAzJ,IAAA,iBAAAE,MAiDD,SAAeyO,GACX,IAAMhD,EAAa3P,KAAK2P,WAClBpO,EAAUvB,KAAKuB,OAASvB,KAAK2O,WAAWiE,QAAQrR,OAChDsR,EAAatR,EAAOuR,eAAe,GACnCC,EAAexR,EAAOa,OACtBvC,EAAa0B,EAAO1B,WACpBmT,EAAc,GAEpB,GAAKzR,EAAL,CAKA,IAAIqO,EAAW5P,KAAK4P,SACpB,IAAKA,EAAU,CACX,IAAMqD,EAAqB1R,EAAOa,OAASpC,KAAKkO,OAAOT,MACvDmC,EAAWjP,KAAKuS,IAAI,EAAGvS,KAAK+R,MAAM/C,EAAasD,GACnD,CAaA,IAXA,IAAME,EAAM,IAAI/C,EAAAA,QACZT,EACA9P,EACAG,KAAKF,WACLE,KAAKD,OAKLqT,GAHmBzS,KAAKsB,MACxB8Q,GAAgBpD,EAAaC,IAEb,GAEbwD,EAAgBzD,EAAakD,EAAWzQ,QAAQ,CACnD,IAAMiR,EAAUR,EAAWlI,MACvByI,EACAA,EAAgBzD,GAEd5N,EAAWoR,EAAI7R,kBAAkB+R,GACjCC,EAAQ,IAAIC,WAAW5D,EAAa,GACtChC,OAAC,EACL,IAAKA,EAAI,EAAGA,EAAIgC,EAAa,EAAGhC,IAC5B2F,EAAM3F,GAAKhN,KAAKuS,KAAK,IAA+B,GAA1BvS,KAAK6S,MAAMzR,EAAS4L,KAElDqF,EAAYhK,KAAKsK,GACjBF,GAAiBzD,EAAaC,CAClC,CACA+C,EAASK,EAAahT,KAjCtB,MAFIA,KAAKqS,UAAU,QAAS,oCAoChC,GAAC,CAAArO,IAAA,sBAAAE,MAED,SAAoBuP,GAAK,IAAAC,EAAA,KACfC,EAAU3T,KAAK4O,KAAKgF,UAAU,CAAEH,IAAKA,IAO3C,OALAE,EAAQ3D,GAAG,WAAW,SAAC5B,GAAI,OACvBsF,EAAKzG,gBAAgB4G,KAAKC,MAAM1F,GAAM,IAE1CuF,EAAQ3D,GAAG,SAAS,SAACjB,GAAC,OAAK2E,EAAKrB,UAAU,QAAStD,EAAE,IAE9C4E,CACX,GAAC,CAAA3P,IAAA,WAAAE,MAED,SAAS6P,GACL,OAAOA,GAAQ,KAAQA,EAAO,KAAMC,QAAQ,GAAKrT,KAAK+R,MAAMqB,EAChE,GAAC,CAAA/P,IAAA,WAAAE,MAED,SAAS6P,GACL,OAAOA,GAAQ,IAAO,MAAQ,IAClC,GAAC,CAAA/P,IAAA,aAAAE,MAED,SACI+P,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAhF,GAGA0E,EAASA,GAAU,mBACnBC,EAAeA,GAAgB,OAC/BC,EAAeA,GAAgB,OAC/BC,EAAWA,GAAY,YACvBC,EAAgBA,GAAiB,OACjCC,EAAgBA,GAAiB,OACjCC,EAAYA,GAAa,SACzBhF,EAAYA,GAAa,cACzB,IACMiF,EAVoBxU,KAAKwN,QAUM,IAC/BiH,EAAkBD,EAAU,IAAf,EAEbE,GACD1U,KAAK2O,WAAWiE,QAAQ+B,GAAG9U,WAAa,EAF3B,GAGd4U,EAGEG,EAAM5U,KAAKgR,SAASsB,WAAW,MACrCtS,KAAKgR,SAASxD,OAASxN,KAAKwN,OAC5BxN,KAAKgR,SAASvD,MAXE,GAYhB,IAMQ/M,EANFmU,EAAQ7U,KAAKwN,QAAUxN,KAAK2O,WAAWiE,QAAQ+B,GAAG9U,WAAa,GACrE,GAAI+U,EAQA,IANAA,EAAIE,UAAYb,EAChBW,EAAIG,SAAS,EAAG,EAhBJ,GAgBgBP,GAC5BI,EAAII,OAICtU,EAAI,EAAGA,GAAK+T,EAAY/T,IAAK,CAC9BkU,EAAIL,UAAYA,EAChBK,EAAIK,aAAe,SAEnB,IAAMlB,EAtBI,EAsBeW,EAAOhU,EAC1BwU,EAAQlV,KAAKmV,SAASpB,GACtBqB,EAAQpV,KAAKqV,SAAStB,GAGxBuB,EAAIvB,EAAOc,EACfS,EAAItV,KAAKwN,OAAS8H,EAAI,GACtBV,EAAIE,UAAYR,EAChBM,EAAIW,KAAOpB,EAAe,IAAMC,EAChCQ,EAAIY,SAASJ,EAAOK,GAAQH,GAE5BV,EAAIE,UAAYT,EAChBO,EAAIW,KAAOrB,EAAe,IAAME,EAChCQ,EAAIY,SAASN,EATH,GASaI,EAC3B,CAER,GAAC,CAAAtR,IAAA,eAAAE,MAED,SAAa6K,GACL/O,KAAKgO,UACLhO,KAAKgO,QAAQ0H,WAAa3G,EAAEhD,OAAO2J,WAE3C,GAAC,CAAA1R,IAAA,WAAAE,MAED,SAASyR,GACL,IAKIjV,EALEkV,EAAgB5V,KAAKyN,MACrBoI,EAAY,GAEZC,EAAW,EAAIH,EAAUvT,OACzB2T,EAAW,EAAIH,EAGrB,IAAKlV,EAAI,EAAGA,EAAIkV,EAAelV,IAAK,CAChC,IAAMsV,EAAS,IAAIC,MAAMN,EAAU,GAAGvT,QAClCuL,OAAC,EAEL,IAAKA,EAAI,EAAGA,EAAIgI,EAAUvT,OAAQuL,IAAK,CACnC,IAAMuI,EAAWvI,EAAImI,EACfK,EAASD,EAAWJ,EACpBM,EAAW1V,EAAIqV,EACfM,EAASD,EAAWL,EAEpBO,EACFH,GAAUC,GAAYC,GAAUH,EAC1B,EACAvV,KAAK4V,IACD5V,KAAKuS,IAAIiD,EAAQC,GACjBzV,KAAKuS,IAAImD,EAAQH,IAErBvV,KAAKuS,IACDvS,KAAK4V,IAAIJ,EAAQC,GACjBzV,KAAK4V,IAAIF,EAAQH,IAE3BlU,OAAC,EAEL,GAAIsU,EAAU,EACV,IAAKtU,EAAI,EAAGA,EAAI2T,EAAU,GAAGvT,OAAQJ,IAChB,MAAbgU,EAAOhU,KACPgU,EAAOhU,GAAK,GAEhBgU,EAAOhU,IAAOsU,EAAUP,EAAYJ,EAAUhI,GAAG3L,EAI7D,CAEA,IAAMwU,EAAY,IAAIjD,WAAWoC,EAAU,GAAGvT,QAC1CqU,OAAC,EAEL,IAAKA,EAAI,EAAGA,EAAId,EAAU,GAAGvT,OAAQqU,IACjCD,EAAUC,GAAKT,EAAOS,GAG1BZ,EAAU7M,KAAKwN,EACnB,CAEA,OAAOX,CACX,MApeJ/J,EAAAiB,EAAAtJ,UAAAwM,GAAAC,GAAApE,EAAAiB,EAAAmD,GAAAtM,OAAAG,eAAAgJ,EAAA,aAAApI,UAAA,IAwEK+H,CAAA,CApBiC,GAoBjCnN,EAAAA,QAAAmN,EAAAlN,EAAAD,QAAAA,EAAAyD,O,GCxED0T,EAA2B,CAAC,ECEhC,IAAIC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqB5V,IAAjB6V,EACH,OAAOA,EAAavX,QAGrB,IAAIC,EAASkX,EAAyBG,GAAY,CAGjDtX,QAAS,CAAC,GAOX,OAHAwX,EAAoBF,GAAUrX,EAAQA,EAAOD,QAASqX,GAG/CpX,EAAOD,OACf,CCnB0BqX,CAAoB,K,UJO9C","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/spectrogram/fft.js","webpack://WaveSurfer/./src/plugin/spectrogram/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(self, () => {\nreturn ","/* eslint-disable complexity, no-redeclare, no-var, one-var */\n\n/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n *\n * @param {Number} bufferSize Buffer size\n * @param {Number} sampleRate Sample rate\n * @param {Function} windowFunc Window function\n * @param {Number} alpha Alpha channel\n */\nexport default function FFT(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    var i;\n    switch (windowFunc) {\n        case 'bartlett':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.54 -\n                    0.46 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n}\n","/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\nimport FFT from \"./fft\";\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 Number of samples to fetch to FFT. Must be\n * a power of 2.\n * @property {boolean} labels Set to true to display frequency labels.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n * @property {?number[][]} colorMap A 256 long array of 4-element arrays.\n * Each entry should contain a float between 0 and 1 and specify\n * r, g, b, and alpha.\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params Parameters used to initialise the plugin\n     * @return {PluginDefinition} An object representing the plugin.\n     */\n    static create(params) {\n        return {\n            name: \"spectrogram\",\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT,\n            },\n            instance: SpectrogramPlugin,\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = (e) => {\n            this.updateScroll(e);\n        };\n        this._onRender = () => {\n            this.render();\n        };\n        this._onWrapperClick = (e) => {\n            this._wrapperClickHandler(e);\n        };\n        this._onReady = () => {\n            const drawer = (this.drawer = ws.drawer);\n\n            this.container =\n                \"string\" == typeof params.container\n                    ? document.querySelector(params.container)\n                    : params.container;\n\n            if (!this.container) {\n                throw Error(\"No container for WaveSurfer spectrogram\");\n            }\n            if (params.colorMap) {\n                if (params.colorMap.length < 256) {\n                    throw new Error(\"Colormap must contain 256 elements\");\n                }\n                for (let i = 0; i < params.colorMap.length; i++) {\n                    const cmEntry = params.colorMap[i];\n                    if (cmEntry.length !== 4) {\n                        throw new Error(\n                            \"ColorMap entries must contain 4 values\"\n                        );\n                    }\n                }\n                this.colorMap = params.colorMap;\n            } else {\n                this.colorMap = [];\n                for (let i = 0; i < 256; i++) {\n                    const val = (255 - i) / 256;\n                    this.colorMap.push([val, val, val, 1]);\n                }\n            }\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples =\n                this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener(\"scroll\", this._onScroll);\n            ws.on(\"redraw\", this._onRender);\n        };\n    }\n\n    init() {\n        // Check if wavesurfer is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        } else {\n            this.wavesurfer.once(\"ready\", this._onReady);\n        }\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un(\"ready\", this._onReady);\n        this.wavesurfer.un(\"redraw\", this._onRender);\n        this.drawer &&\n            this.drawer.wrapper.removeEventListener(\"scroll\", this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.removeEventListener(\"click\", this._onWrapperClick);\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector(\"spectrogram\");\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement(\"spectrogram\");\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = (this.labelsEl = document.createElement(\"canvas\"));\n            labelsEl.classList.add(\"spec-labels\");\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: \"absolute\",\n                zIndex: 9,\n                height: `${this.height / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`,\n            });\n            this.wrapper.appendChild(labelsEl);\n            this.loadLabels(\n                \"rgba(68,68,68,0.5)\",\n                \"12px\",\n                \"10px\",\n                \"\",\n                \"#fff\",\n                \"#f7f7f7\",\n                \"center\",\n                \"#specLabels\"\n            );\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: \"block\",\n            position: \"relative\",\n            userSelect: \"none\",\n            webkitUserSelect: \"none\",\n            height: `${this.height / this.pixelRatio}px`,\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: \"100%\",\n                overflowX: \"hidden\",\n                overflowY: \"hidden\",\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener(\"click\", this._onWrapperClick);\n    }\n\n    _wrapperClickHandler(event) {\n        event.preventDefault();\n        const relX = \"offsetX\" in event ? event.offsetX : event.layerX;\n        this.fireEvent(\"click\", relX / this.width || 0);\n    }\n\n    createCanvas() {\n        const canvas = (this.canvas = this.wrapper.appendChild(\n            document.createElement(\"canvas\")\n        ));\n\n        this.spectrCc = canvas.getContext(\"2d\");\n\n        this.util.style(canvas, {\n            position: \"absolute\",\n            zIndex: 4,\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + \"px\";\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.width = width;\n    }\n    drawSpectrogram = async (frequenciesData) => {\n        if (!isNaN(frequenciesData[0][0])) {\n            // data is 1ch [sample, freq] format\n            // to [channel, sample, freq] format\n            frequenciesData = [frequenciesData];\n        }\n\n        // Set the height to fit all channels\n        this.wrapper.style.height = this.height * frequenciesData.length + \"px\";\n\n        this.canvas.width = this.width;\n        this.canvas.height = this.height * frequenciesData.length;\n\n        const spectrCc = this.spectrCc;\n        if (!spectrCc) {\n            return;\n        }\n        for (let c = 0; c < frequenciesData.length; c++) {\n            const pixels = frequenciesData[c];\n            const height = pixels[0].length;\n            const width = pixels.length;\n            const imageData = new ImageData(width, height);\n            for (let i = 0; i < width; i++) {\n                for (let j = 0; j < height; j++) {\n                    const colorMap = this.colorMap[pixels[i][j]];\n                    const redIndex = ((height - 1 - j) * width + i) * 4;\n                    imageData.data[redIndex] = colorMap[0] * 255;\n                    imageData.data[redIndex + 1] = colorMap[1] * 255;\n                    imageData.data[redIndex + 2] = colorMap[2] * 255;\n                    imageData.data[redIndex + 3] = colorMap[3] * 255;\n                }\n            }\n\n            const renderer = await createImageBitmap(imageData);\n            spectrCc.drawImage(\n                renderer,\n                0,\n                0,\n                width,\n                height,\n                0,\n                0,\n                this.width,\n                this.height // destination width, height\n            );\n        }\n    };\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\n        const channelOne = buffer.getChannelData(0);\n        const bufferLength = buffer.length;\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        if (!buffer) {\n            this.fireEvent(\"error\", \"Web Audio buffer is not available\");\n            return;\n        }\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(\n            fftSamples,\n            sampleRate,\n            this.windowFunc,\n            this.alpha\n        );\n        const maxSlicesCount = Math.floor(\n            bufferLength / (fftSamples - noverlap)\n        );\n        let currentOffset = 0;\n\n        while (currentOffset + fftSamples < channelOne.length) {\n            const segment = channelOne.slice(\n                currentOffset,\n                currentOffset + fftSamples\n            );\n            const spectrum = fft.calculateSpectrum(segment);\n            const array = new Uint8Array(fftSamples / 2);\n            let j;\n            for (j = 0; j < fftSamples / 2; j++) {\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n            }\n            frequencies.push(array);\n            currentOffset += fftSamples - noverlap;\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const request = this.util.fetchFile({ url: url });\n\n        request.on(\"success\", (data) =>\n            this.drawSpectrogram(JSON.parse(data))\n        );\n        request.on(\"error\", (e) => this.fireEvent(\"error\", e));\n\n        return request;\n    }\n\n    freqType(freq) {\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\n    }\n\n    unitType(freq) {\n        return freq >= 1000 ? \"KHz\" : \"Hz\";\n    }\n\n    loadLabels(\n        bgFill,\n        fontSizeFreq,\n        fontSizeUnit,\n        fontType,\n        textColorFreq,\n        textColorUnit,\n        textAlign,\n        container\n    ) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || \"rgba(68,68,68,0)\";\n        fontSizeFreq = fontSizeFreq || \"12px\";\n        fontSizeUnit = fontSizeUnit || \"10px\";\n        fontType = fontType || \"Helvetica\";\n        textColorFreq = textColorFreq || \"#fff\";\n        textColorUnit = textColorUnit || \"#fff\";\n        textAlign = textAlign || \"center\";\n        container = container || \"#specLabels\";\n        const bgWidth = 55;\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = 0;\n        const step =\n            (this.wavesurfer.backend.ac.sampleRate / 2 - freqStart) /\n            labelIndex;\n\n        // prepare canvas element for labels\n        const ctx = this.labelsEl.getContext(\"2d\");\n        this.labelsEl.height = this.height;\n        this.labelsEl.width = bgWidth;\n        const scale = this.height / (this.wavesurfer.backend.ac.sampleRate / 2);\n        if (ctx) {\n            // fill background\n            ctx.fillStyle = bgFill;\n            ctx.fillRect(0, 0, bgWidth, getMaxY);\n            ctx.fill();\n            let i;\n\n            // render labels\n            for (i = 0; i <= labelIndex; i++) {\n                ctx.textAlign = textAlign;\n                ctx.textBaseline = \"middle\";\n\n                const freq = freqStart + step * i;\n                const label = this.freqType(freq);\n                const units = this.unitType(freq);\n                const yLabelOffset = 2;\n                const x = 16;\n                let y = freq * scale;\n                y = this.height - y - 10;\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + \" \" + fontType;\n                ctx.fillText(units, x + 24, y);\n                // freq label\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + \" \" + fontType;\n                ctx.fillText(label, x, y);\n            }\n        }\n    }\n\n    updateScroll(e) {\n        if (this.wrapper) {\n            this.wrapper.scrollLeft = e.target.scrollLeft;\n        }\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap =\n                    oldEnd <= newStart || newEnd <= oldStart\n                        ? 0\n                        : Math.min(\n                              Math.max(oldEnd, newStart),\n                              Math.max(newEnd, oldStart)\n                          ) -\n                          Math.max(\n                              Math.min(oldEnd, newStart),\n                              Math.min(newEnd, oldStart)\n                          );\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(943);\n"],"names":["root","factory","exports","module","define","amd","self","bufferSize","sampleRate","windowFunc","alpha","this","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","i","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","rval","ival","mag","real","imag","bSi","sqrt","spectrum","k","floor","log","LN2","length","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","halfSize","fftStep","N","default","obj","_fft","require","__esModule","_typeof","Symbol","iterator","constructor","prototype","_regeneratorRuntime","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","SpectrogramPlugin","params","ws","_this","instance","Constructor","_classCallCheck","drawSpectrogram","_ref","_callee","frequenciesData","spectrCc","c","pixels","height","width","imageData","j","colorMap","redIndex","renderer","_context","wrapper","style","canvas","ImageData","data","createImageBitmap","drawImage","args","arguments","apply","_x","wavesurfer","util","frequenciesDataUrl","_onScroll","e","updateScroll","_onRender","render","_onWrapperClick","_wrapperClickHandler","_onReady","drawer","container","document","querySelector","pixelRatio","fftSamples","noverlap","createWrapper","createCanvas","addEventListener","on","protoProps","staticProps","deferInit","FFT","isReady","once","unAll","un","removeEventListener","parentNode","removeChild","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","left","position","zIndex","concat","appendChild","loadLabels","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","event","preventDefault","relX","offsetX","layerX","fireEvent","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","round","callback","backend","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","max","fft","currentOffset","segment","array","Uint8Array","log10","url","_this2","request","fetchFile","JSON","parse","freq","toFixed","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","getMaxY","labelIndex","step","ac","ctx","scale","fillStyle","fillRect","fill","textBaseline","label","freqType","units","unitType","y","font","fillText","x","scrollLeft","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn","m","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}