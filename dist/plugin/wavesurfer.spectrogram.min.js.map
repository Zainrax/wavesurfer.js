{"version":3,"file":"wavesurfer.spectrogram.min.js","mappings":"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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/spectrogram/fft.js","webpack://WaveSurfer/./src/plugin/spectrogram/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(self, () => {\nreturn ","/* eslint-disable complexity, no-redeclare, no-var, one-var */\n\n/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n *\n * @param {Number} bufferSize Buffer size\n * @param {Number} sampleRate Sample rate\n * @param {Function} windowFunc Window function\n * @param {Number} alpha Alpha channel\n */\nexport default function FFT(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    var i;\n    switch (windowFunc) {\n        case 'bartlett':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.54 -\n                    0.46 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n}\n","/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\nimport FFT from './fft';\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 Number of samples to fetch to FFT. Must be\n * a power of 2.\n * @property {boolean} labels Set to true to display frequency labels.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n * @property {?number[][]} colorMap A 256 long array of 4-element arrays.\n * Each entry should contain a float between 0 and 1 and specify\n * r, g, b, and alpha.\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params Parameters used to initialise the plugin\n     * @return {PluginDefinition} An object representing the plugin.\n     */\n    static create(params) {\n        return {\n            name: 'spectrogram',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT\n            },\n            instance: SpectrogramPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = e => {\n            this.updateScroll(e);\n        };\n        this._onRender = () => {\n            this.render();\n        };\n        this._onWrapperClick = e => {\n            this._wrapperClickHandler(e);\n        };\n        this._onReady = () => {\n            const drawer = (this.drawer = ws.drawer);\n\n            this.container =\n                'string' == typeof params.container\n                    ? document.querySelector(params.container)\n                    : params.container;\n\n            if (!this.container) {\n                throw Error('No container for WaveSurfer spectrogram');\n            }\n            if (params.colorMap) {\n                if (params.colorMap.length < 256) {\n                    throw new Error('Colormap must contain 256 elements');\n                }\n                for (let i = 0; i < params.colorMap.length; i++) {\n                    const cmEntry = params.colorMap[i];\n                    if (cmEntry.length !== 4) {\n                        throw new Error(\n                            'ColorMap entries must contain 4 values'\n                        );\n                    }\n                }\n                this.colorMap = params.colorMap;\n            } else {\n                this.colorMap = [];\n                for (let i = 0; i < 256; i++) {\n                    const val = (255 - i) / 256;\n                    this.colorMap.push([val, val, val, 1]);\n                }\n            }\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples =\n                this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\n            ws.on('redraw', this._onRender);\n        };\n    }\n\n    init() {\n        // Check if wavesurfer is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n        }\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('redraw', this._onRender);\n        this.drawer && this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector('spectrogram');\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement('spectrogram');\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = (this.labelsEl = document.createElement('canvas'));\n            labelsEl.classList.add('spec-labels');\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: 'absolute',\n                zIndex: 9,\n                height: `${this.height / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`\n            });\n            this.wrapper.appendChild(labelsEl);\n            this.loadLabels(\n                'rgba(68,68,68,0.5)',\n                '12px',\n                '10px',\n                '',\n                '#fff',\n                '#f7f7f7',\n                'center',\n                '#specLabels'\n            );\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: `${this.height / this.pixelRatio}px`\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener('click', this._onWrapperClick);\n    }\n\n    _wrapperClickHandler(event) {\n        event.preventDefault();\n        const relX = 'offsetX' in event ? event.offsetX : event.layerX;\n        this.fireEvent('click', relX / this.width || 0);\n    }\n\n    createCanvas() {\n        const canvas = (this.canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        ));\n\n        this.spectrCc = canvas.getContext('2d');\n\n        this.util.style(canvas, {\n            position: 'absolute',\n            zIndex: 4\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.width = width;\n    }\n\n    drawSpectrogram(frequenciesData, my) {\n        const spectrCc = my.spectrCc;\n        const pixels = frequenciesData;\n        if (spectrCc) {\n            const height = pixels[0].length;\n            const width = pixels.length;\n            const imageData = new ImageData(width, height);\n            for (let i = 0; i < width; i++) {\n                for (let j = 0; j < height; j++) {\n                    const colorMap = my.colorMap[pixels[i][j]];\n                    const redIndex = ((height - 1 - j) * width + i) * 4;\n                    imageData.data[redIndex] = colorMap[0] * 255;\n                    imageData.data[redIndex + 1] = colorMap[1] * 255;\n                    imageData.data[redIndex + 2] = colorMap[2] * 255;\n                    imageData.data[redIndex + 3] = colorMap[3] * 255;\n                }\n            }\n            createImageBitmap(imageData).then((renderer) => {\n                spectrCc.drawImage(\n                    renderer,\n                    0,\n                    0,\n                    width,\n                    height,\n                    0,\n                    0,\n                    my.width,\n                    my.height, // destination width, height\n                );\n            });\n        }\n    }\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\n        const channelOne = buffer.getChannelData(0);\n        const bufferLength = buffer.length;\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        if (!buffer) {\n            this.fireEvent('error', 'Web Audio buffer is not available');\n            return;\n        }\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(\n            fftSamples,\n            sampleRate,\n            this.windowFunc,\n            this.alpha\n        );\n        const maxSlicesCount = Math.floor(\n            bufferLength / (fftSamples - noverlap)\n        );\n        let currentOffset = 0;\n\n        while (currentOffset + fftSamples < channelOne.length) {\n            const segment = channelOne.slice(\n                currentOffset,\n                currentOffset + fftSamples\n            );\n            const spectrum = fft.calculateSpectrum(segment);\n            const array = new Uint8Array(fftSamples / 2);\n            let j;\n            for (j = 0; j < fftSamples / 2; j++) {\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n            }\n            frequencies.push(array);\n            currentOffset += fftSamples - noverlap;\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const request = this.util.fetchFile({ url: url });\n\n        request.on('success', data =>\n            this.drawSpectrogram(JSON.parse(data), this)\n        );\n        request.on('error', e => this.fireEvent('error', e));\n\n        return request;\n    }\n\n    freqType(freq) {\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\n    }\n\n    unitType(freq) {\n        return freq >= 1000 ? 'KHz' : 'Hz';\n    }\n\n    loadLabels(\n        bgFill,\n        fontSizeFreq,\n        fontSizeUnit,\n        fontType,\n        textColorFreq,\n        textColorUnit,\n        textAlign,\n        container\n    ) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || 'rgba(68,68,68,0)';\n        fontSizeFreq = fontSizeFreq || '12px';\n        fontSizeUnit = fontSizeUnit || '10px';\n        fontType = fontType || 'Helvetica';\n        textColorFreq = textColorFreq || '#fff';\n        textColorUnit = textColorUnit || '#fff';\n        textAlign = textAlign || 'center';\n        container = container || '#specLabels';\n        const bgWidth = 55;\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = 0;\n        const step =\n            (this.wavesurfer.backend.ac.sampleRate / 2 - freqStart) /\n            labelIndex;\n\n        // prepare canvas element for labels\n        const ctx = this.labelsEl.getContext('2d');\n        this.labelsEl.height = this.height;\n        this.labelsEl.width = bgWidth;\n        const scale = this.height / (this.wavesurfer.backend.ac.sampleRate / 2 );\n        if (ctx) {\n            // fill background\n            ctx.fillStyle = bgFill;\n            ctx.fillRect(0, 0, bgWidth, getMaxY);\n            ctx.fill();\n            let i;\n\n            // render labels\n            for (i = 0; i <= labelIndex; i++) {\n                ctx.textAlign = textAlign;\n                ctx.textBaseline = 'middle';\n\n                const freq = freqStart + step * i;\n                const label = this.freqType(freq);\n                const units = this.unitType(freq);\n                const yLabelOffset = 2;\n                const x = 16;\n                let y = freq * scale;\n                y = this.height - y - 10;\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, y);\n                // freq label\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, y);\n            }\n        }\n    }\n\n    updateScroll(e) {\n        if (this.wrapper) {\n            this.wrapper.scrollLeft = e.target.scrollLeft;\n        }\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap =\n                    oldEnd <= newStart || newEnd <= oldStart\n                        ? 0\n                        : Math.min(\n                            Math.max(oldEnd, newStart),\n                            Math.max(newEnd, oldStart)\n                        ) -\n                        Math.max(\n                            Math.min(oldEnd, newStart),\n                            Math.min(newEnd, oldStart)\n                        );\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(943);\n"],"names":["root","factory","exports","module","define","amd","self","bufferSize","sampleRate","windowFunc","alpha","this","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","i","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","rval","ival","mag","real","imag","bSi","sqrt","spectrum","k","floor","log","LN2","length","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","halfSize","fftStep","N","default","obj","_fft","require","__esModule","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","arg","key","input","hint","prim","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","SpectrogramPlugin","params","ws","_this","instance","Constructor","_classCallCheck","wavesurfer","util","frequenciesDataUrl","_onScroll","e","updateScroll","_onRender","render","_onWrapperClick","_wrapperClickHandler","_onReady","drawer","container","document","querySelector","colorMap","val","push","width","pixelRatio","fftSamples","height","noverlap","createWrapper","createCanvas","wrapper","addEventListener","on","protoProps","staticProps","value","name","deferInit","FFT","isReady","once","unAll","un","removeEventListener","parentNode","removeChild","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","style","left","position","zIndex","concat","appendChild","loadLabels","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","event","preventDefault","relX","offsetX","layerX","fireEvent","canvas","spectrCc","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","drawSpectrogram","round","frequenciesData","my","pixels","imageData","ImageData","j","redIndex","data","createImageBitmap","then","renderer","drawImage","callback","backend","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","max","fft","currentOffset","segment","slice","array","Uint8Array","log10","url","_this2","request","fetchFile","JSON","parse","freq","toFixed","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","getMaxY","labelIndex","step","ac","ctx","scale","fillStyle","fillRect","fill","textBaseline","label","freqType","units","unitType","y","font","fillText","x","scrollLeft","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn","m","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}