{"version":3,"file":"wavesurfer.spectrogram.js","mappings":"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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/spectrogram/fft.js","webpack://WaveSurfer/./src/plugin/spectrogram/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(self, () => {\nreturn ","/* eslint-disable complexity, no-redeclare, no-var, one-var */\n\n/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n *\n * @param {Number} bufferSize Buffer size\n * @param {Number} sampleRate Sample rate\n * @param {Function} windowFunc Window function\n * @param {Number} alpha Alpha channel\n */\nexport default function FFT(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    var i;\n    switch (windowFunc) {\n        case 'bartlett':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.54 -\n                    0.46 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n}\n","/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\nimport FFT from './fft';\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 Number of samples to fetch to FFT. Must be\n * a power of 2.\n * @property {boolean} labels Set to true to display frequency labels.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n * @property {?number[][]} colorMap A 256 long array of 4-element arrays.\n * Each entry should contain a float between 0 and 1 and specify\n * r, g, b, and alpha.\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params Parameters used to initialise the plugin\n     * @return {PluginDefinition} An object representing the plugin.\n     */\n    static create(params) {\n        return {\n            name: 'spectrogram',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT\n            },\n            instance: SpectrogramPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = e => {\n            this.updateScroll(e);\n        };\n        this._onRender = () => {\n            this.render();\n        };\n        this._onWrapperClick = e => {\n            this._wrapperClickHandler(e);\n        };\n        this._onReady = () => {\n            const drawer = (this.drawer = ws.drawer);\n\n            this.container =\n                'string' == typeof params.container\n                    ? document.querySelector(params.container)\n                    : params.container;\n\n            if (!this.container) {\n                throw Error('No container for WaveSurfer spectrogram');\n            }\n            if (params.colorMap) {\n                if (params.colorMap.length < 256) {\n                    throw new Error('Colormap must contain 256 elements');\n                }\n                for (let i = 0; i < params.colorMap.length; i++) {\n                    const cmEntry = params.colorMap[i];\n                    if (cmEntry.length !== 4) {\n                        throw new Error(\n                            'ColorMap entries must contain 4 values'\n                        );\n                    }\n                }\n                this.colorMap = params.colorMap;\n            } else {\n                this.colorMap = [];\n                for (let i = 0; i < 256; i++) {\n                    const val = (255 - i) / 256;\n                    this.colorMap.push([val, val, val, 1]);\n                }\n            }\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples =\n                this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\n            ws.on('redraw', this._onRender);\n        };\n    }\n\n    init() {\n        // Check if wavesurfer is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n        }\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('redraw', this._onRender);\n        this.drawer && this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector('spectrogram');\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement('spectrogram');\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = (this.labelsEl = document.createElement('canvas'));\n            labelsEl.classList.add('spec-labels');\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: 'absolute',\n                zIndex: 9,\n                height: `${this.height / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`\n            });\n            this.wrapper.appendChild(labelsEl);\n            this.loadLabels(\n                'rgba(68,68,68,0.5)',\n                '12px',\n                '10px',\n                '',\n                '#fff',\n                '#f7f7f7',\n                'center',\n                '#specLabels'\n            );\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: `${this.height / this.pixelRatio}px`\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener('click', this._onWrapperClick);\n    }\n\n    _wrapperClickHandler(event) {\n        event.preventDefault();\n        const relX = 'offsetX' in event ? event.offsetX : event.layerX;\n        this.fireEvent('click', relX / this.width || 0);\n    }\n\n    createCanvas() {\n        const canvas = (this.canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        ));\n\n        this.spectrCc = canvas.getContext('2d');\n\n        this.util.style(canvas, {\n            position: 'absolute',\n            zIndex: 4\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.width = width;\n    }\n\n    drawSpectrogram(frequenciesData, my) {\n        const spectrCc = my.spectrCc;\n        const pixels = frequenciesData;\n        if (spectrCc) {\n            const height = pixels[0].length;\n            const width = pixels.length;\n            const imageData = new ImageData(width, height);\n            for (let i = 0; i < width; i++) {\n                for (let j = 0; j < height; j++) {\n                    const colorMap = my.colorMap[pixels[i][j]];\n                    const redIndex = ((height - 1 - j) * width + i) * 4;\n                    imageData.data[redIndex] = colorMap[0] * 255;\n                    imageData.data[redIndex + 1] = colorMap[1] * 255;\n                    imageData.data[redIndex + 2] = colorMap[2] * 255;\n                    imageData.data[redIndex + 3] = colorMap[3] * 255;\n                }\n            }\n            createImageBitmap(imageData).then((renderer) => {\n                spectrCc.drawImage(\n                    renderer,\n                    0,\n                    0,\n                    width,\n                    height,\n                    0,\n                    0,\n                    my.width,\n                    my.height, // destination width, height\n                );\n            });\n        }\n    }\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\n        const channelOne = buffer.getChannelData(0);\n        const bufferLength = buffer.length;\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        if (!buffer) {\n            this.fireEvent('error', 'Web Audio buffer is not available');\n            return;\n        }\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(\n            fftSamples,\n            sampleRate,\n            this.windowFunc,\n            this.alpha\n        );\n        const maxSlicesCount = Math.floor(\n            bufferLength / (fftSamples - noverlap)\n        );\n        let currentOffset = 0;\n\n        while (currentOffset + fftSamples < channelOne.length) {\n            const segment = channelOne.slice(\n                currentOffset,\n                currentOffset + fftSamples\n            );\n            const spectrum = fft.calculateSpectrum(segment);\n            const array = new Uint8Array(fftSamples / 2);\n            let j;\n            for (j = 0; j < fftSamples / 2; j++) {\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n            }\n            frequencies.push(array);\n            currentOffset += fftSamples - noverlap;\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const request = this.util.fetchFile({ url: url });\n\n        request.on('success', data =>\n            this.drawSpectrogram(JSON.parse(data), this)\n        );\n        request.on('error', e => this.fireEvent('error', e));\n\n        return request;\n    }\n\n    freqType(freq) {\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\n    }\n\n    unitType(freq) {\n        return freq >= 1000 ? 'KHz' : 'Hz';\n    }\n\n    loadLabels(\n        bgFill,\n        fontSizeFreq,\n        fontSizeUnit,\n        fontType,\n        textColorFreq,\n        textColorUnit,\n        textAlign,\n        container\n    ) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || 'rgba(68,68,68,0)';\n        fontSizeFreq = fontSizeFreq || '12px';\n        fontSizeUnit = fontSizeUnit || '10px';\n        fontType = fontType || 'Helvetica';\n        textColorFreq = textColorFreq || '#fff';\n        textColorUnit = textColorUnit || '#fff';\n        textAlign = textAlign || 'center';\n        container = container || '#specLabels';\n        const bgWidth = 55;\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = 0;\n        const step =\n            (this.wavesurfer.backend.ac.sampleRate / 2 - freqStart) /\n            labelIndex;\n\n        // prepare canvas element for labels\n        const ctx = this.labelsEl.getContext('2d');\n        this.labelsEl.height = this.height;\n        this.labelsEl.width = bgWidth;\n        const scale = this.height / (this.wavesurfer.backend.ac.sampleRate / 2 );\n        if (ctx) {\n            // fill background\n            ctx.fillStyle = bgFill;\n            ctx.fillRect(0, 0, bgWidth, getMaxY);\n            ctx.fill();\n            let i;\n\n            // render labels\n            for (i = 0; i <= labelIndex; i++) {\n                ctx.textAlign = textAlign;\n                ctx.textBaseline = 'middle';\n\n                const freq = freqStart + step * i;\n                const label = this.freqType(freq);\n                const units = this.unitType(freq);\n                const yLabelOffset = 2;\n                const x = 16;\n                let y = freq * scale;\n                y = this.height - y - 10;\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, y);\n                // freq label\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, y);\n            }\n        }\n    }\n\n    updateScroll(e) {\n        if (this.wrapper) {\n            this.wrapper.scrollLeft = e.target.scrollLeft;\n        }\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap =\n                    oldEnd <= newStart || newEnd <= oldStart\n                        ? 0\n                        : Math.min(\n                            Math.max(oldEnd, newStart),\n                            Math.max(newEnd, oldStart)\n                        ) -\n                        Math.max(\n                            Math.min(oldEnd, newStart),\n                            Math.min(newEnd, oldStart)\n                        );\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/spectrogram/index.js\");\n",""],"names":["FFT","bufferSize","sampleRate","windowFunc","alpha","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","i","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","real","imag","bSi","sqrt","rval","ival","mag","spectrum","k","floor","log","LN2","length","halfSize","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","fftStep","N","module","exports","default","_fft","_interopRequireDefault","require","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","res","call","Number","SpectrogramPlugin","params","ws","_this","wavesurfer","util","frequenciesDataUrl","_onScroll","e","updateScroll","_onRender","render","_onWrapperClick","_wrapperClickHandler","_onReady","drawer","container","document","querySelector","colorMap","cmEntry","val","push","width","pixelRatio","fftSamples","height","noverlap","createWrapper","createCanvas","wrapper","addEventListener","on","value","init","isReady","once","destroy","unAll","un","removeEventListener","parentNode","removeChild","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","style","left","position","zIndex","concat","appendChild","loadLabels","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","event","preventDefault","relX","offsetX","layerX","fireEvent","canvas","spectrCc","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","drawSpectrogram","round","frequenciesData","my","pixels","imageData","ImageData","j","redIndex","data","createImageBitmap","then","renderer","drawImage","callback","backend","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","max","fft","maxSlicesCount","currentOffset","segment","slice","array","Uint8Array","log10","url","_this2","request","fetchFile","JSON","parse","freqType","freq","toFixed","unitType","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","frequenciesHeight","bgWidth","getMaxY","labelIndex","freqStart","step","ac","ctx","scale","fillStyle","fillRect","fill","textBaseline","label","units","yLabelOffset","x","y","font","fillText","scrollLeft","resample","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn","m","create","name","deferInit"],"sourceRoot":""}