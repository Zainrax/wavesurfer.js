{"version":3,"file":"wavesurfer.spectrogram.js","mappings":"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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/plugin/spectrogram/fft.js","webpack://WaveSurfer/./src/plugin/spectrogram/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(self, () => {\nreturn ","/* eslint-disable complexity, no-redeclare, no-var, one-var */\n\n/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n *\n * @param {Number} bufferSize Buffer size\n * @param {Number} sampleRate Sample rate\n * @param {Function} windowFunc Window function\n * @param {Number} alpha Alpha channel\n */\nexport default function FFT(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    var i;\n    switch (windowFunc) {\n        case 'bartlett':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.54 -\n                    0.46 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n}\n","/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\nimport FFT from './fft';\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 Number of samples to fetch to FFT. Must be\n * a power of 2.\n * @property {boolean} labels Set to true to display frequency labels.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n * @property {?number[][]} colorMap A 256 long array of 4-element arrays.\n * Each entry should contain a float between 0 and 1 and specify\n * r, g, b, and alpha.\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params Parameters used to initialise the plugin\n     * @return {PluginDefinition} An object representing the plugin.\n     */\n    static create(params) {\n        return {\n            name: 'spectrogram',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT\n            },\n            instance: SpectrogramPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = e => {\n            this.updateScroll(e);\n        };\n        this._onRender = () => {\n            this.render();\n        };\n        this._onWrapperClick = e => {\n            this._wrapperClickHandler(e);\n        };\n        this._onReady = () => {\n            const drawer = (this.drawer = ws.drawer);\n\n            this.container =\n                'string' == typeof params.container\n                    ? document.querySelector(params.container)\n                    : params.container;\n\n            if (!this.container) {\n                throw Error('No container for WaveSurfer spectrogram');\n            }\n            if (params.colorMap) {\n                if (params.colorMap.length < 256) {\n                    throw new Error('Colormap must contain 256 elements');\n                }\n                for (let i = 0; i < params.colorMap.length; i++) {\n                    const cmEntry = params.colorMap[i];\n                    if (cmEntry.length !== 4) {\n                        throw new Error(\n                            'ColorMap entries must contain 4 values'\n                        );\n                    }\n                }\n                this.colorMap = params.colorMap;\n            } else {\n                this.colorMap = [];\n                for (let i = 0; i < 256; i++) {\n                    const val = (255 - i) / 256;\n                    this.colorMap.push([val, val, val, 1]);\n                }\n            }\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples =\n                this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\n            ws.on('redraw', this._onRender);\n        };\n    }\n\n    init() {\n        // Check if wavesurfer is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n        }\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('redraw', this._onRender);\n        this.drawer && this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector('spectrogram');\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement('spectrogram');\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = (this.labelsEl = document.createElement('canvas'));\n            labelsEl.classList.add('spec-labels');\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: 'absolute',\n                zIndex: 9,\n                height: `${this.height / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`\n            });\n            this.wrapper.appendChild(labelsEl);\n            this.loadLabels(\n                'rgba(68,68,68,0.5)',\n                '12px',\n                '10px',\n                '',\n                '#fff',\n                '#f7f7f7',\n                'center',\n                '#specLabels'\n            );\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: `${this.height / this.pixelRatio}px`\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener('click', this._onWrapperClick);\n    }\n\n    _wrapperClickHandler(event) {\n        event.preventDefault();\n        const relX = 'offsetX' in event ? event.offsetX : event.layerX;\n        this.fireEvent('click', relX / this.width || 0);\n    }\n\n    createCanvas() {\n        const canvas = (this.canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        ));\n\n        this.spectrCc = canvas.getContext('2d');\n\n        this.util.style(canvas, {\n            position: 'absolute',\n            zIndex: 4\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.width = width;\n    }\n    drawSpectrogram = async(frequenciesData) => {\n        if (!isNaN(frequenciesData[0][0])) {\n            // data is 1ch [sample, freq] format\n            // to [channel, sample, freq] format\n            frequenciesData = [frequenciesData];\n        }\n\n        // Set the height to fit all channels\n        this.wrapper.style.height = this.height * frequenciesData.length + 'px';\n\n        this.canvas.width = this.width;\n        this.canvas.height = this.height * frequenciesData.length;\n\n        const spectrCc = this.spectrCc;\n        if (!spectrCc) {\n            return;\n        }\n        for (let c = 0; c < frequenciesData.length; c++) {\n            const pixels = frequenciesData[c];\n            const height = pixels[0].length;\n            const width = pixels.length;\n            const imageData = new ImageData(width, height);\n            for (let i = 0; i < width; i++) {\n                for (let j = 0; j < height; j++) {\n                    const colorMap = this.colorMap[pixels[i][j]];\n                    const redIndex = ((height - 1 - j) * width + i) * 4;\n                    imageData.data[redIndex] = colorMap[0] * 255;\n                    imageData.data[redIndex + 1] = colorMap[1] * 255;\n                    imageData.data[redIndex + 2] = colorMap[2] * 255;\n                    imageData.data[redIndex + 3] = colorMap[3] * 255;\n                }\n            }\n\n            const renderer = await createImageBitmap(imageData);\n            await spectrCc.drawImage(\n                renderer,\n                0,\n                0,\n                width,\n                height,\n                0,\n                0,\n                this.width,\n                this.height, // destination width, height\n            );\n        }\n\n        this.loadLabels(\n            this.options.labelsBackground,\n            '12px',\n            '12px',\n            '',\n            this.options.labelsColor,\n            this.options.labelsHzColor || this.options.labelsColor,\n            'center',\n            '#specLabels',\n            frequenciesData.length,\n        );\n\n        this.emit('ready');\n    }\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\n        const channelOne = buffer.getChannelData(0);\n        const bufferLength = buffer.length;\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        if (!buffer) {\n            this.fireEvent('error', 'Web Audio buffer is not available');\n            return;\n        }\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(\n            fftSamples,\n            sampleRate,\n            this.windowFunc,\n            this.alpha\n        );\n        const maxSlicesCount = Math.floor(\n            bufferLength / (fftSamples - noverlap)\n        );\n        let currentOffset = 0;\n\n        while (currentOffset + fftSamples < channelOne.length) {\n            const segment = channelOne.slice(\n                currentOffset,\n                currentOffset + fftSamples\n            );\n            const spectrum = fft.calculateSpectrum(segment);\n            const array = new Uint8Array(fftSamples / 2);\n            let j;\n            for (j = 0; j < fftSamples / 2; j++) {\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n            }\n            frequencies.push(array);\n            currentOffset += fftSamples - noverlap;\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const request = this.util.fetchFile({ url: url });\n\n        request.on('success', data =>\n            this.drawSpectrogram(JSON.parse(data), this)\n        );\n        request.on('error', e => this.fireEvent('error', e));\n\n        return request;\n    }\n\n    freqType(freq) {\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\n    }\n\n    unitType(freq) {\n        return freq >= 1000 ? 'KHz' : 'Hz';\n    }\n\n    loadLabels(\n        bgFill,\n        fontSizeFreq,\n        fontSizeUnit,\n        fontType,\n        textColorFreq,\n        textColorUnit,\n        textAlign,\n        container\n    ) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || 'rgba(68,68,68,0)';\n        fontSizeFreq = fontSizeFreq || '12px';\n        fontSizeUnit = fontSizeUnit || '10px';\n        fontType = fontType || 'Helvetica';\n        textColorFreq = textColorFreq || '#fff';\n        textColorUnit = textColorUnit || '#fff';\n        textAlign = textAlign || 'center';\n        container = container || '#specLabels';\n        const bgWidth = 55;\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = 0;\n        const step =\n            (this.wavesurfer.backend.ac.sampleRate / 2 - freqStart) /\n            labelIndex;\n\n        // prepare canvas element for labels\n        const ctx = this.labelsEl.getContext('2d');\n        this.labelsEl.height = this.height;\n        this.labelsEl.width = bgWidth;\n        const scale = this.height / (this.wavesurfer.backend.ac.sampleRate / 2 );\n        if (ctx) {\n            // fill background\n            ctx.fillStyle = bgFill;\n            ctx.fillRect(0, 0, bgWidth, getMaxY);\n            ctx.fill();\n            let i;\n\n            // render labels\n            for (i = 0; i <= labelIndex; i++) {\n                ctx.textAlign = textAlign;\n                ctx.textBaseline = 'middle';\n\n                const freq = freqStart + step * i;\n                const label = this.freqType(freq);\n                const units = this.unitType(freq);\n                const yLabelOffset = 2;\n                const x = 16;\n                let y = freq * scale;\n                y = this.height - y - 10;\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, y);\n                // freq label\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, y);\n            }\n        }\n    }\n\n    updateScroll(e) {\n        if (this.wrapper) {\n            this.wrapper.scrollLeft = e.target.scrollLeft;\n        }\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap =\n                    oldEnd <= newStart || newEnd <= oldStart\n                        ? 0\n                        : Math.min(\n                            Math.max(oldEnd, newStart),\n                            Math.max(newEnd, oldStart)\n                        ) -\n                        Math.max(\n                            Math.min(oldEnd, newStart),\n                            Math.min(newEnd, oldStart)\n                        );\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/spectrogram/index.js\");\n",""],"names":["FFT","bufferSize","sampleRate","windowFunc","alpha","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","i","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","real","imag","bSi","sqrt","rval","ival","mag","spectrum","k","floor","log","LN2","length","halfSize","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","fftStep","N","module","exports","default","_fft","_interopRequireDefault","require","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_regeneratorRuntime","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","SpectrogramPlugin","params","ws","_this","drawSpectrogram","_ref","_callee","frequenciesData","spectrCc","c","pixels","height","width","imageData","j","colorMap","redIndex","renderer","_callee$","_context","wrapper","style","canvas","ImageData","data","createImageBitmap","drawImage","loadLabels","options","labelsBackground","labelsColor","labelsHzColor","emit","_x","wavesurfer","util","frequenciesDataUrl","_onScroll","e","updateScroll","_onRender","render","_onWrapperClick","_wrapperClickHandler","_onReady","drawer","container","document","querySelector","cmEntry","pixelRatio","fftSamples","noverlap","createWrapper","createCanvas","addEventListener","on","init","isReady","once","destroy","unAll","un","removeEventListener","parentNode","removeChild","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","left","position","zIndex","concat","appendChild","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","event","preventDefault","relX","offsetX","layerX","fireEvent","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","round","callback","backend","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","max","fft","maxSlicesCount","currentOffset","segment","array","Uint8Array","log10","url","_this2","request","fetchFile","JSON","parse","freqType","freq","toFixed","unitType","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","frequenciesHeight","bgWidth","getMaxY","labelIndex","freqStart","step","ac","ctx","scale","fillStyle","fillRect","fill","textBaseline","label","units","yLabelOffset","x","y","font","fillText","scrollLeft","resample","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn","m","deferInit"],"sourceRoot":""}